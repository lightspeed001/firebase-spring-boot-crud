apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: grafana-metrics
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 1
    labels:
      app: alertmanager
      group: org.alertmanager
    name: alertmanager
  spec:
    replicas: 1
    selector:
      app: alertmanager
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: alertmanager
        name: alertmanager
      spec:
        containers:
        - args:
          - -config.file=/etc/alertmanager/config.yml
          - -storage.path=/alertmanager
          env:
          - name: EXTERNAL_URL
            valueFrom:
              configMapKeyRef:
                key: url
                name: prometheus-external-url
          image: prom/alertmanager:latest
          imagePullPolicy: Always
          name: alertmanager
          ports:
          - containerPort: 9093
            name: alertmanager
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /etc/alertmanager
            name: config-volume
          - mountPath: /etc/alertmanager-templates
            name: templates-volume
          - mountPath: /alertmanager
            name: alertmanager
        dnsPolicy: ClusterFirst
        nodeSelector:
          region: infra
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: alertmanager
          name: config-volume
        - configMap:
            defaultMode: 420
            name: alertmanager-templates
          name: templates-volume
        - name: alertmanager
          persistentVolumeClaim:
            claimName: alertmanager
    test: false
    triggers:
    - type: ConfigChange
  status: {}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      app: hawkular-grafana-persistent
      group: org.hawkular
    name: hawkular-grafana
  spec:
    replicas: 1
    selector:
      app: hawkular-grafana-persistent
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 10800
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/container.hawkular-grafana.image.entrypoint: '["/run.sh"]'
        creationTimestamp: null
        labels:
          app: hawkular-grafana-persistent
          group: org.hawkular
      spec:
        containers:
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: GF_SERVER_ROOT_URL
            value: http://metrics-grafana.paas.example.com
          - name: GF_DATABASE_HOST
            value: mysql:3306
          - name: GF_DATABASE_NAME
            value: grafana
          - name: GF_DATABASE_PASSWORD
            value: admin
          - name: GF_DATABASE_TYPE
            value: mysql
          - name: GF_DATABASE_USER
            value: admin
          image: hawkular/hawkular-grafana-datasource:ludo
          imagePullPolicy: Always
          name: hawkular-grafana
          ports:
          - containerPort: 3000
            name: http
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
  status: {}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      template: mysql-persistent-template
    name: mysql
  spec:
    replicas: 1
    selector:
      name: mysql
    strategy:
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: mysql
      spec:
        containers:
        - env:
          - name: MYSQL_USER
            value: admin
          - name: MYSQL_PASSWORD
            value: admin
          - name: MYSQL_DATABASE
            value: grafana
          image: rhscl/mysql-56-rhel7@sha256:ea0f4bee1e31df0192494c497f1bc95b8a33405d9eadb2d33dc4f2bd3cc17073
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3306
            timeoutSeconds: 1
          name: mysql
          ports:
          - containerPort: 3306
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - MYSQL_PWD="$MYSQL_PASSWORD" mysql -h 127.0.0.1 -u $MYSQL_USER -D $MYSQL_DATABASE
                -e 'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/mysql/data
            name: mysql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - mysql
        from:
          kind: ImageStreamTag
          name: mysql:5.6
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
  status: {}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      app: prometheus
    name: prometheus
  spec:
    replicas: 1
    selector:
      app: prometheus
      deploymentconfig: prometheus
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: prometheus
          deploymentconfig: prometheus
      spec:
        containers:
        - args:
          - -storage.local.retention=$(STORAGE_RETENTION)
          - -storage.local.memory-chunks=$(STORAGE_MEMORY_CHUNKS)
          - -config.file=/etc/prometheus/prometheus.yml
          - -alertmanager.url=http://alertmanager:9093/
          - -web.external-url=http://$(EXTERNAL_URL)/
          - -web.route-prefix=/
          env:
          - name: EXTERNAL_URL
            valueFrom:
              configMapKeyRef:
                key: url
                name: prometheus-external-url
          - name: STORAGE_RETENTION
            valueFrom:
              configMapKeyRef:
                key: storage-retention
                name: prometheus-env
          - name: STORAGE_MEMORY_CHUNKS
            valueFrom:
              configMapKeyRef:
                key: storage-memory-chunks
                name: prometheus-env
          image: prom/prometheus:latest
          imagePullPolicy: Always
          name: prometheus
          ports:
          - containerPort: 9090
            name: web
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /etc/prometheus
            name: config-volume
          - mountPath: /etc/prometheus-rules
            name: rules-volume
          - mountPath: /prometheus
            name: prometheus-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: prometheus-configmap
          name: config-volume
        - configMap:
            defaultMode: 420
            name: prometheus-rules
          name: rules-volume
        - name: prometheus-data
          persistentVolumeClaim:
            claimName: prometheus-claim
    test: false
    triggers:
    - type: ConfigChange
  status: {}
- apiVersion: v1
  data:
    config.yml: |-
      global:
        # ResolveTimeout is the time after which an alert is declared resolved
        # if it has not been updated.
        resolve_timeout: 5m

        # The smarthost and SMTP sender used for mail notifications.
        smtp_smarthost: 'smtp.default:25'
        smtp_from: 'prometheus@openshift'
        #smtp_auth_username: 'foo@bar.com'
        #smtp_auth_password: 'barfoo'

        # The API URL to use for Slack notifications.
        #slack_api_url: 'https://hooks.slack.com/services/abc123'

        # # The auth token for Hipchat.
        # hipchat_auth_token: '1234556789'
        #
        # # Alternative host for Hipchat.
        # hipchat_url: 'https://hipchat.foobar.org/'

      # # The directory from which notification templates are read.
      templates:
      - '/etc/alertmanager-templates/*.tmpl'

      # The root route on which each incoming alert enters.
      route:

        # The labels by which incoming alerts are grouped together. For example,
        # multiple alerts coming in for cluster=A and alertname=LatencyHigh would
        # be batched into a single group.

        group_by: ['alertname', 'cluster', 'service']

        # When a new group of alerts is created by an incoming alert, wait at
        # least 'group_wait' to send the initial notification.
        # This way ensures that you get multiple alerts for the same group that start
        # firing shortly after another are batched together on the first
        # notification.

        group_wait: 30s

        # When the first notification was sent, wait 'group_interval' to send a batch
        # of new alerts that started firing for that group.

        group_interval: 5m

        # If an alert has successfully been sent, wait 'repeat_interval' to
        # resend them.

        #repeat_interval: 1m
        repeat_interval: 15m

        # A default receiver

        # If an alert isn't caught by a route, send it to default.
        receiver: email_alert

        # All the above attributes are inherited by all child routes and can
        # overwritten on each.

        # The child route trees.
        routes:
        # Send severity=slack alerts to slack.
        #- match:
        #    severity: slack
        #  receiver: slack_alert
        - match:
            severity: email
          receiver: email_alert

      receivers:
      #- name: 'slack_alert'
      #  slack_configs:
      #  - channel: '#devops'
      #    send_resolved: true

          # # Whether or not to notify about resolved alerts.
          # send_resolved: true
          #
          # # The Slack webhook URL.
          # [ api_url: <string> | default = global.slack_api_url ]
          #
          # # The channel or user to send notifications to.
          # channel: <tmpl_string>
          #
          # # API request data as defined by the Slack webhook API.
          # [ color: <tmpl_string> | default = '{{ if eq .Status "firing" }}danger{{ else }}good{{ end }}' ]
          # [ username: <tmpl_string> | default = '{{ template "slack.default.username" . }}'
          # [ title: <tmpl_string> | default = '{{ template "slack.default.title" . }}' ]
          # [ title_link: <tmpl_string> | default = '{{ template "slack.default.titlelink" . }}' ]
          # [ icon_emoji: <tmpl_string> ]
          # [ pretext: <tmpl_string> | default = '{{ template "slack.default.pretext" . }}' ]
          # [ text: <tmpl_string> | default = '{{ template "slack.default.text" . }}' ]
          # [ fallback: <tmpl_string> | default = '{{ template "slack.default.fallback" . }}' ]

      - name: 'email_alert'
        email_configs:
        - to: 'akram@example.com'


      #
      #
      #
      # global:
      #   # The smarthost and SMTP sender used for mail notifications.
      #   smtp_smarthost: 'localhost:25'
      #   smtp_from: 'alertmanager@example.org'
      #   smtp_auth_username: 'alertmanager'
      #   smtp_auth_password: 'password'
      #   # The auth token for Hipchat.
      #   hipchat_auth_token: '1234556789'
      #   # Alternative host for Hipchat.
      #   hipchat_url: 'https://hipchat.foobar.org/'
      #
      # # The directory from which notification templates are read.
      # templates:
      # - '/etc/alertmanager/template/*.tmpl'
      #
      # # The root route on which each incoming alert enters.
      # route:
      #   # The labels by which incoming alerts are grouped together. For example,
      #   # multiple alerts coming in for cluster=A and alertname=LatencyHigh would
      #   # be batched into a single group.
      #   group_by: ['alertname', 'cluster', 'service']
      #
      #   # When a new group of alerts is created by an incoming alert, wait at
      #   # least 'group_wait' to send the initial notification.
      #   # This way ensures that you get multiple alerts for the same group that start
      #   # firing shortly after another are batched together on the first
      #   # notification.
      #   group_wait: 30s
      #
      #   # When the first notification was sent, wait 'group_interval' to send a batch
      #   # of new alerts that started firing for that group.
      #   group_interval: 5m
      #
      #   # If an alert has successfully been sent, wait 'repeat_interval' to
      #   # resend them.
      #   repeat_interval: 3h
      #
      #   # A default receiver
      #   receiver: team-X-mails
      #
      #   # All the above attributes are inherited by all child routes and can
      #   # overwritten on each.
      #
      #   # The child route trees.
      #   routes:
      #   # This routes performs a regular expression match on alert labels to
      #   # catch alerts that are related to a list of services.
      #   - match_re:
      #       service: ^(foo1|foo2|baz)$
      #     receiver: team-X-mails
      #     # The service has a sub-route for critical alerts, any alerts
      #     # that do not match, i.e. severity != critical, fall-back to the
      #     # parent node and are sent to 'team-X-mails'
      #     routes:
      #     - match:
      #         severity: critical
      #       receiver: team-X-pager
      #   - match:
      #       service: files
      #     receiver: team-Y-mails
      #
      #     routes:
      #     - match:
      #         severity: critical
      #       receiver: team-Y-pager
      #
      #   # This route handles all alerts coming from a database service. If there's
      #   # no team to handle it, it defaults to the DB team.
      #   - match:
      #       service: database
      #     receiver: team-DB-pager
      #     # Also group alerts by affected database.
      #     group_by: [alertname, cluster, database]
      #     routes:
      #     - match:
      #         owner: team-X
      #       receiver: team-X-pager
      #     - match:
      #         owner: team-Y
      #       receiver: team-Y-pager
      #
      #
      # # Inhibition rules allow to mute a set of alerts given that another alert is
      # # firing.
      # # We use this to mute any warning-level notifications if the same alert is
      # # already critical.
      # inhibit_rules:
      # - source_match:
      #     severity: 'critical'
      #   target_match:
      #     severity: 'warning'
      #   # Apply inhibition if the alertname is the same.
      #   equal: ['alertname', 'cluster', 'service']
      #
      #
      # receivers:
      # - name: 'team-X-mails'
      #   email_configs:
      #   - to: 'team-X+alerts@example.org'
      #
      # - name: 'team-X-pager'
      #   email_configs:
      #   - to: 'team-X+alerts-critical@example.org'
      #   pagerduty_configs:
      #   - service_key: <team-X-key>
      #
      # - name: 'team-Y-mails'
      #   email_configs:
      #   - to: 'team-Y+alerts@example.org'
      #
      # - name: 'team-Y-pager'
      #   pagerduty_configs:
      #   - service_key: <team-Y-key>
      #
      # - name: 'team-DB-pager'
      #   pagerduty_configs:
      #   - service_key: <team-DB-key>
      # - name: 'team-X-hipchat'
      #   hipchat_configs:
      #   - auth_token: <auth_token>
      #     room_id: 85
      #     message_format: html
      #     notify: true
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: alertmanager
- apiVersion: v1
  data:
    default.tmpl: |
      {{ define "__alertmanager" }}AlertManager{{ end }}
      {{ define "__alertmanagerURL" }}{{ .ExternalURL }}/#/alerts?receiver={{ .Receiver }}{{ end }}

      {{ define "__subject" }}[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .GroupLabels.SortedPairs.Values | join " " }} {{ if gt (len .CommonLabels) (len .GroupLabels) }}({{ with .CommonLabels.Remove .GroupLabels.Names }}{{ .Values | join " " }}{{ end }}){{ end }}{{ end }}
      {{ define "__description" }}{{ end }}

      {{ define "__text_alert_list" }}{{ range . }}Labels:
      {{ range .Labels.SortedPairs }} - {{ .Name }} = {{ .Value }}
      {{ end }}Annotations:
      {{ range .Annotations.SortedPairs }} - {{ .Name }} = {{ .Value }}
      {{ end }}Source: {{ .GeneratorURL }}
      {{ end }}{{ end }}


      {{ define "slack.default.title" }}{{ template "__subject" . }}{{ end }}
      {{ define "slack.default.username" }}{{ template "__alertmanager" . }}{{ end }}
      {{ define "slack.default.fallback" }}{{ template "slack.default.title" . }} | {{ template "slack.default.titlelink" . }}{{ end }}
      {{ define "slack.default.pretext" }}{{ end }}
      {{ define "slack.default.titlelink" }}{{ template "__alertmanagerURL" . }}{{ end }}
      {{ define "slack.default.iconemoji" }}{{ end }}
      {{ define "slack.default.iconurl" }}{{ end }}
      {{ define "slack.default.text" }}{{ end }}


      {{ define "hipchat.default.from" }}{{ template "__alertmanager" . }}{{ end }}
      {{ define "hipchat.default.message" }}{{ template "__subject" . }}{{ end }}


      {{ define "pagerduty.default.description" }}{{ template "__subject" . }}{{ end }}
      {{ define "pagerduty.default.client" }}{{ template "__alertmanager" . }}{{ end }}
      {{ define "pagerduty.default.clientURL" }}{{ template "__alertmanagerURL" . }}{{ end }}
      {{ define "pagerduty.default.instances" }}{{ template "__text_alert_list" . }}{{ end }}


      {{ define "opsgenie.default.message" }}{{ template "__subject" . }}{{ end }}
      {{ define "opsgenie.default.description" }}{{ .CommonAnnotations.SortedPairs.Values | join " " }}
      {{ if gt (len .Alerts.Firing) 0 -}}
      Alerts Firing:
      {{ template "__text_alert_list" .Alerts.Firing }}
      {{- end }}
      {{ if gt (len .Alerts.Resolved) 0 -}}
      Alerts Resolved:
      {{ template "__text_alert_list" .Alerts.Resolved }}
      {{- end }}
      {{- end }}
      {{ define "opsgenie.default.source" }}{{ template "__alertmanagerURL" . }}{{ end }}


      {{ define "victorops.default.message" }}{{ template "__subject" . }} | {{ template "__alertmanagerURL" . }}{{ end }}
      {{ define "victorops.default.from" }}{{ template "__alertmanager" . }}{{ end }}


      {{ define "email.default.subject" }}{{ template "__subject" . }}{{ end }}
      {{ define "email.default.html" }}
      <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
      <!--
      Style and HTML derived from https://github.com/mailgun/transactional-email-templates


      The MIT License (MIT)

      Copyright (c) 2014 Mailgun

      Permission is hereby granted, free of charge, to any person obtaining a copy
      of this software and associated documentation files (the "Software"), to deal
      in the Software without restriction, including without limitation the rights
      to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
      copies of the Software, and to permit persons to whom the Software is
      furnished to do so, subject to the following conditions:

      The above copyright notice and this permission notice shall be included in all
      copies or substantial portions of the Software.

      THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
      IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
      FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
      AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
      LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
      OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
      SOFTWARE.
      -->
      <html xmlns="http://www.w3.org/1999/xhtml" xmlns="http://www.w3.org/1999/xhtml" style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;">
      <head style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;">
      <meta name="viewport" content="width=device-width" style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;" />
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;" />
      <title style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;">{{ template "__subject" . }}</title>

      </head>

      <body itemscope="" itemtype="http://schema.org/EmailMessage" style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; -webkit-font-smoothing: antialiased; -webkit-text-size-adjust: none; height: 100%; line-height: 1.6em; width: 100% !important; background-color: #f6f6f6; margin: 0; padding: 0;" bgcolor="#f6f6f6">

      <table style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; width: 100%; background-color: #f6f6f6; margin: 0;" bgcolor="#f6f6f6">
        <tr style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;">
          <td style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; vertical-align: top; margin: 0;" valign="top"></td>
          <td width="600" style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; vertical-align: top; display: block !important; max-width: 600px !important; clear: both !important; width: 100% !important; margin: 0 auto; padding: 0;" valign="top">
            <div style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; max-width: 600px; display: block; margin: 0 auto; padding: 0;">
              <table width="100%" cellpadding="0" cellspacing="0" style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; border-radius: 3px; background-color: #fff; margin: 0; border: 1px solid #e9e9e9;" bgcolor="#fff">
                <tr style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;">
                  <td style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 16px; vertical-align: top; color: #fff; font-weight: 500; text-align: center; border-radius: 3px 3px 0 0; background-color: #E6522C; margin: 0; padding: 20px;" align="center" bgcolor="#E6522C" valign="top">
                    {{ .Alerts | len }} alert{{ if gt (len .Alerts) 1 }}s{{ end }} for {{ range .GroupLabels.SortedPairs }}
                      {{ .Name }}={{ .Value }}
                    {{ end }}
                  </td>
                </tr>
                <tr style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;">
                  <td style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; vertical-align: top; margin: 0; padding: 10px;" valign="top">
                    <table width="100%" cellpadding="0" cellspacing="0" style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;">
                      <tr style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;">
                        <td style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; vertical-align: top; margin: 0; padding: 0 0 20px;" valign="top">
                          <a href="{{ template "__alertmanagerURL" . }}" style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; color: #FFF; text-decoration: none; line-height: 2em; font-weight: bold; text-align: center; cursor: pointer; display: inline-block; border-radius: 5px; text-transform: capitalize; background-color: #348eda; margin: 0; border-color: #348eda; border-style: solid; border-width: 10px 20px;">View in {{ template "__alertmanager" . }}</a>
                        </td>
                      </tr>
                      {{ if gt (len .Alerts.Firing) 0 }}
                      <tr style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;">
                        <td style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; vertical-align: top; margin: 0; padding: 0 0 20px;" valign="top">
                          <strong style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;">[{{ .Alerts.Firing | len }}] Firing</strong>
                        </td>
                      </tr>
                      {{ end }}
                      {{ range .Alerts.Firing }}
                      <tr style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;">
                        <td style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; vertical-align: top; margin: 0; padding: 0 0 20px;" valign="top">
                          <strong style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;">Labels</strong><br style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;" />
                          {{ range .Labels.SortedPairs }}{{ .Name }} = {{ .Value }}<br style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;" />{{ end }}
                          {{ if gt (len .Annotations) 0 }}<strong style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;">Annotations</strong><br style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;" />{{ end }}
                          {{ range .Annotations.SortedPairs }}{{ .Name }} = {{ .Value }}<br style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;" />{{ end }}
                          <a href="{{ .GeneratorURL }}" style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; color: #348eda; text-decoration: underline; margin: 0;">Source</a><br style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;" />
                        </td>
                      </tr>
                      {{ end }}

                      {{ if gt (len .Alerts.Resolved) 0 }}
                        {{ if gt (len .Alerts.Firing) 0 }}
                      <tr style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;">
                        <td style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; vertical-align: top; margin: 0; padding: 0 0 20px;" valign="top">
                          <br style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;" />
                          <hr style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;" />
                          <br style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;" />
                        </td>
                      </tr>
                        {{ end }}
                      <tr style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;">
                        <td style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; vertical-align: top; margin: 0; padding: 0 0 20px;" valign="top">
                          <strong style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;">[{{ .Alerts.Resolved | len }}] Resolved</strong>
                        </td>
                      </tr>
                      {{ end }}
                      {{ range .Alerts.Resolved }}
                      <tr style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;">
                        <td style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; vertical-align: top; margin: 0; padding: 0 0 20px;" valign="top">
                          <strong style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;">Labels</strong><br style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;" />
                          {{ range .Labels.SortedPairs }}{{ .Name }} = {{ .Value }}<br style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;" />{{ end }}
                          {{ if gt (len .Annotations) 0 }}<strong style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;">Annotations</strong><br style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;" />{{ end }}
                          {{ range .Annotations.SortedPairs }}{{ .Name }} = {{ .Value }}<br style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;" />{{ end }}
                          <a href="{{ .GeneratorURL }}" style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; color: #348eda; text-decoration: underline; margin: 0;">Source</a><br style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;" />
                        </td>
                      </tr>
                      {{ end }}
                    </table>
                  </td>
                </tr>
              </table>

              <div style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; width: 100%; clear: both; color: #999; margin: 0; padding: 20px;">
                <table width="100%" style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;">
                  <tr style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; margin: 0;">
                    <td style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 12px; vertical-align: top; text-align: center; color: #999; margin: 0; padding: 0 0 20px;" align="center" valign="top"><a href="{{ .ExternalURL }}" style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 12px; color: #999; text-decoration: underline; margin: 0;">Sent by {{ template "__alertmanager" . }}</a></td>
                  </tr>
                </table>
              </div></div>
          </td>
          <td style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; box-sizing: border-box; font-size: 14px; vertical-align: top; margin: 0;" valign="top"></td>
        </tr>
      </table>

      </body>
      </html>

      {{ end }}

      {{ define "pushover.default.title" }}{{ template "__subject" . }}{{ end }}
      {{ define "pushover.default.message" }}{{ .CommonAnnotations.SortedPairs.Values | join " " }}
      {{ if gt (len .Alerts.Firing) 0 }}
      Alerts Firing:
      {{ template "__text_alert_list" .Alerts.Firing }}
      {{ end }}
      {{ if gt (len .Alerts.Resolved) 0 }}
      Alerts Resolved:
      {{ template "__text_alert_list" .Alerts.Resolved }}
      {{ end }}
      {{ end }}
      {{ define "pushover.default.url" }}{{ template "__alertmanagerURL" . }}{{ end }}
    slack.tmpl: |
      {{ define "slack.devops.text" }}
      {{range .Alerts}}{{.Annotations.DESCRIPTION}}
      {{end}}
      {{ end }}
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: alertmanager-templates
- apiVersion: v1
  data:
    docker-monitoring-dashboard.json: |
      {
        "__inputs": [
          {
            "name": "DS_PROMETHEUS",
            "label": "prometheus",
            "description": "",
            "type": "datasource",
            "pluginId": "prometheus",
            "pluginName": "Prometheus"
          }
        ],
        "__requires": [
          {
            "type": "panel",
            "id": "singlestat",
            "name": "Singlestat",
            "version": ""
          },
          {
            "type": "panel",
            "id": "graph",
            "name": "Graph",
            "version": ""
          },
          {
            "type": "grafana",
            "id": "grafana",
            "name": "Grafana",
            "version": "3.1.1"
          },
          {
            "type": "datasource",
            "id": "prometheus",
            "name": "Prometheus",
            "version": "1.0.0"
          }
        ],
        "id": null,
        "title": "Docker monitoring",
        "description": "Docker monitoring with Prometheus and cAdvisor",
        "tags": [
          "docker"
        ],
        "style": "dark",
        "timezone": "browser",
        "editable": true,
        "hideControls": false,
        "sharedCrosshair": true,
        "rows": [
          {
            "collapse": false,
            "editable": true,
            "height": "50",
            "panels": [
              {
                "cacheTimeout": null,
                "colorBackground": false,
                "colorValue": false,
                "colors": [
                  "rgba(245, 54, 54, 0.9)",
                  "rgba(237, 129, 40, 0.89)",
                  "rgba(50, 172, 45, 0.97)"
                ],
                "datasource": "${DS_PROMETHEUS}",
                "editable": true,
                "error": false,
                "format": "none",
                "gauge": {
                  "maxValue": 100,
                  "minValue": 0,
                  "show": false,
                  "thresholdLabels": false,
                  "thresholdMarkers": true
                },
                "height": "20",
                "id": 7,
                "interval": null,
                "isNew": true,
                "links": [],
                "mappingType": 1,
                "mappingTypes": [
                  {
                    "name": "value to text",
                    "value": 1
                  },
                  {
                    "name": "range to text",
                    "value": 2
                  }
                ],
                "maxDataPoints": 100,
                "nullPointMode": "connected",
                "nullText": null,
                "postfix": "",
                "postfixFontSize": "50%",
                "prefix": "",
                "prefixFontSize": "50%",
                "rangeMaps": [
                  {
                    "from": "null",
                    "text": "N/A",
                    "to": "null"
                  }
                ],
                "span": 2,
                "sparkline": {
                  "fillColor": "rgba(31, 118, 189, 0.18)",
                  "full": false,
                  "lineColor": "rgb(31, 120, 193)",
                  "show": false
                },
                "targets": [
                  {
                    "expr": "count(container_last_seen{image!=\"\"})",
                    "intervalFactor": 2,
                    "legendFormat": "",
                    "metric": "container_last_seen",
                    "refId": "A",
                    "step": 240
                  }
                ],
                "thresholds": "",
                "title": "Running containers",
                "transparent": true,
                "type": "singlestat",
                "valueFontSize": "80%",
                "valueMaps": [
                  {
                    "op": "=",
                    "text": "N/A",
                    "value": "null"
                  }
                ],
                "valueName": "avg"
              },
              {
                "cacheTimeout": null,
                "colorBackground": false,
                "colorValue": false,
                "colors": [
                  "rgba(245, 54, 54, 0.9)",
                  "rgba(237, 129, 40, 0.89)",
                  "rgba(50, 172, 45, 0.97)"
                ],
                "datasource": "${DS_PROMETHEUS}",
                "editable": true,
                "error": false,
                "format": "mbytes",
                "gauge": {
                  "maxValue": 100,
                  "minValue": 0,
                  "show": false,
                  "thresholdLabels": false,
                  "thresholdMarkers": true
                },
                "height": "20",
                "id": 5,
                "interval": null,
                "isNew": true,
                "links": [],
                "mappingType": 1,
                "mappingTypes": [
                  {
                    "name": "value to text",
                    "value": 1
                  },
                  {
                    "name": "range to text",
                    "value": 2
                  }
                ],
                "maxDataPoints": 100,
                "nullPointMode": "connected",
                "nullText": null,
                "postfix": "",
                "postfixFontSize": "50%",
                "prefix": "",
                "prefixFontSize": "50%",
                "rangeMaps": [
                  {
                    "from": "null",
                    "text": "N/A",
                    "to": "null"
                  }
                ],
                "span": 2,
                "sparkline": {
                  "fillColor": "rgba(31, 118, 189, 0.18)",
                  "full": false,
                  "lineColor": "rgb(31, 120, 193)",
                  "show": false
                },
                "targets": [
                  {
                    "expr": "sum(container_memory_usage_bytes{image!=\"\"})/1024/1024",
                    "intervalFactor": 2,
                    "legendFormat": "",
                    "metric": "container_memory_usage_bytes",
                    "refId": "A",
                    "step": 240
                  }
                ],
                "thresholds": "",
                "title": "Total Memory Usage",
                "transparent": true,
                "type": "singlestat",
                "valueFontSize": "80%",
                "valueMaps": [
                  {
                    "op": "=",
                    "text": "N/A",
                    "value": "null"
                  }
                ],
                "valueName": "current"
              },
              {
                "cacheTimeout": null,
                "colorBackground": false,
                "colorValue": false,
                "colors": [
                  "rgba(245, 54, 54, 0.9)",
                  "rgba(237, 129, 40, 0.89)",
                  "rgba(50, 172, 45, 0.97)"
                ],
                "datasource": "${DS_PROMETHEUS}",
                "editable": true,
                "error": false,
                "format": "percent",
                "gauge": {
                  "maxValue": 100,
                  "minValue": 0,
                  "show": false,
                  "thresholdLabels": false,
                  "thresholdMarkers": true
                },
                "height": "20",
                "id": 6,
                "interval": null,
                "isNew": true,
                "links": [],
                "mappingType": 1,
                "mappingTypes": [
                  {
                    "name": "value to text",
                    "value": 1
                  },
                  {
                    "name": "range to text",
                    "value": 2
                  }
                ],
                "maxDataPoints": 100,
                "nullPointMode": "connected",
                "nullText": null,
                "postfix": "",
                "postfixFontSize": "50%",
                "prefix": "",
                "prefixFontSize": "50%",
                "rangeMaps": [
                  {
                    "from": "null",
                    "text": "N/A",
                    "to": "null"
                  }
                ],
                "span": 2,
                "sparkline": {
                  "fillColor": "rgba(31, 118, 189, 0.18)",
                  "full": false,
                  "lineColor": "rgb(31, 120, 193)",
                  "show": false
                },
                "targets": [
                  {
                    "expr": "sum(rate(container_cpu_user_seconds_total{image!=\"\"}[5m]) * 100)",
                    "intervalFactor": 2,
                    "legendFormat": "",
                    "metric": "container_memory_usage_bytes",
                    "refId": "A",
                    "step": 240
                  }
                ],
                "thresholds": "",
                "title": "Total CPU Usage",
                "transparent": true,
                "type": "singlestat",
                "valueFontSize": "80%",
                "valueMaps": [
                  {
                    "op": "=",
                    "text": "N/A",
                    "value": "null"
                  }
                ],
                "valueName": "current"
              },
              {
                "cacheTimeout": null,
                "colorBackground": false,
                "colorValue": false,
                "colors": [
                  "rgba(245, 54, 54, 0.9)",
                  "rgba(237, 129, 40, 0.89)",
                  "rgba(50, 172, 45, 0.97)"
                ],
                "datasource": "${DS_PROMETHEUS}",
                "editable": true,
                "error": false,
                "format": "none",
                "gauge": {
                  "maxValue": 100,
                  "minValue": 0,
                  "show": false,
                  "thresholdLabels": false,
                  "thresholdMarkers": true
                },
                "height": "20",
                "id": 8,
                "interval": null,
                "isNew": true,
                "links": [],
                "mappingType": 1,
                "mappingTypes": [
                  {
                    "name": "value to text",
                    "value": 1
                  },
                  {
                    "name": "range to text",
                    "value": 2
                  }
                ],
                "maxDataPoints": 100,
                "nullPointMode": "connected",
                "nullText": null,
                "postfix": "",
                "postfixFontSize": "50%",
                "prefix": "",
                "prefixFontSize": "50%",
                "rangeMaps": [
                  {
                    "from": "null",
                    "text": "N/A",
                    "to": "null"
                  }
                ],
                "span": 2,
                "sparkline": {
                  "fillColor": "rgba(31, 118, 189, 0.18)",
                  "full": false,
                  "lineColor": "rgb(31, 120, 193)",
                  "show": false
                },
                "targets": [
                  {
                    "expr": "count(container_last_seen{id=~\"^/docker.*\",image!=\"gcr.io/google_containers/pause-amd64:3.0\"})",
                    "intervalFactor": 2,
                    "legendFormat": "",
                    "metric": "container_last_seen",
                    "refId": "A",
                    "step": 240
                  }
                ],
                "thresholds": "",
                "title": "Running containers without \"pause\"",
                "transparent": true,
                "type": "singlestat",
                "valueFontSize": "80%",
                "valueMaps": [
                  {
                    "op": "=",
                    "text": "N/A",
                    "value": "null"
                  }
                ],
                "valueName": "avg"
              }
            ],
            "title": "New row"
          },
          {
            "collapse": false,
            "editable": true,
            "height": "250px",
            "panels": [
              {
                "aliasColors": {},
                "bars": false,
                "datasource": "${DS_PROMETHEUS}",
                "decimals": 2,
                "editable": true,
                "error": false,
                "fill": 1,
                "grid": {
                  "threshold1": null,
                  "threshold1Color": "rgba(216, 200, 27, 0.27)",
                  "threshold2": null,
                  "threshold2Color": "rgba(234, 112, 112, 0.22)"
                },
                "id": 2,
                "isNew": true,
                "legend": {
                  "alignAsTable": true,
                  "avg": true,
                  "current": true,
                  "max": false,
                  "min": false,
                  "rightSide": true,
                  "show": true,
                  "total": false,
                  "values": true
                },
                "lines": true,
                "linewidth": 2,
                "links": [],
                "nullPointMode": "connected",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [],
                "span": 12,
                "stack": false,
                "steppedLine": false,
                "targets": [
                  {
                    "expr": "rate(container_cpu_user_seconds_total{image!=\"\"}[5m]) * 100",
                    "intervalFactor": 2,
                    "legendFormat": "{{name}}",
                    "metric": "cpu",
                    "refId": "A",
                    "step": 10
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "CPU Usage",
                "tooltip": {
                  "msResolution": false,
                  "shared": true,
                  "sort": 0,
                  "value_type": "cumulative"
                },
                "transparent": false,
                "type": "graph",
                "xaxis": {
                  "show": true
                },
                "yaxes": [
                  {
                    "format": "percent",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  }
                ]
              }
            ],
            "title": "Row"
          },
          {
            "collapse": false,
            "editable": true,
            "height": "250px",
            "panels": [
              {
                "aliasColors": {},
                "bars": false,
                "datasource": "${DS_PROMETHEUS}",
                "decimals": 2,
                "editable": true,
                "error": false,
                "fill": 1,
                "grid": {
                  "threshold1": null,
                  "threshold1Color": "rgba(216, 200, 27, 0.27)",
                  "threshold2": null,
                  "threshold2Color": "rgba(234, 112, 112, 0.22)"
                },
                "id": 1,
                "isNew": true,
                "legend": {
                  "alignAsTable": true,
                  "avg": true,
                  "current": true,
                  "max": false,
                  "min": false,
                  "rightSide": true,
                  "show": true,
                  "total": false,
                  "values": true
                },
                "lines": true,
                "linewidth": 2,
                "links": [],
                "nullPointMode": "connected",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [],
                "span": 12,
                "stack": false,
                "steppedLine": false,
                "targets": [
                  {
                    "expr": "container_memory_usage_bytes{image!=\"\"}",
                    "hide": false,
                    "intervalFactor": 2,
                    "legendFormat": "{{name}}",
                    "metric": "container_memory_usage_bytes",
                    "refId": "A",
                    "step": 10
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Memory Usage",
                "tooltip": {
                  "msResolution": false,
                  "shared": true,
                  "sort": 0,
                  "value_type": "cumulative"
                },
                "transparent": false,
                "type": "graph",
                "xaxis": {
                  "show": true
                },
                "yaxes": [
                  {
                    "format": "bytes",
                    "label": "",
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": false
                  }
                ]
              }
            ],
            "title": "New row"
          },
          {
            "collapse": false,
            "editable": true,
            "height": "250px",
            "panels": [
              {
                "aliasColors": {},
                "bars": false,
                "datasource": "${DS_PROMETHEUS}",
                "editable": true,
                "error": false,
                "fill": 1,
                "grid": {
                  "threshold1": null,
                  "threshold1Color": "rgba(216, 200, 27, 0.27)",
                  "threshold2": null,
                  "threshold2Color": "rgba(234, 112, 112, 0.22)"
                },
                "id": 3,
                "isNew": true,
                "legend": {
                  "avg": false,
                  "current": false,
                  "max": false,
                  "min": false,
                  "show": true,
                  "total": false,
                  "values": false
                },
                "lines": true,
                "linewidth": 2,
                "links": [],
                "nullPointMode": "connected",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [],
                "span": 6,
                "stack": false,
                "steppedLine": false,
                "targets": [
                  {
                    "expr": "irate(container_network_receive_bytes_total{image!=\"\"}[5m])",
                    "intervalFactor": 2,
                    "legendFormat": "{{name}}",
                    "metric": "container_network_receive_bytes_total",
                    "refId": "A",
                    "step": 20
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Network Rx",
                "tooltip": {
                  "msResolution": false,
                  "shared": true,
                  "sort": 0,
                  "value_type": "cumulative"
                },
                "type": "graph",
                "xaxis": {
                  "show": true
                },
                "yaxes": [
                  {
                    "format": "Bps",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  }
                ]
              },
              {
                "aliasColors": {},
                "bars": false,
                "datasource": "${DS_PROMETHEUS}",
                "editable": true,
                "error": false,
                "fill": 1,
                "grid": {
                  "threshold1": null,
                  "threshold1Color": "rgba(216, 200, 27, 0.27)",
                  "threshold2": null,
                  "threshold2Color": "rgba(234, 112, 112, 0.22)"
                },
                "id": 4,
                "isNew": true,
                "legend": {
                  "avg": false,
                  "current": false,
                  "max": false,
                  "min": false,
                  "show": true,
                  "total": false,
                  "values": false
                },
                "lines": true,
                "linewidth": 2,
                "links": [],
                "nullPointMode": "connected",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [],
                "span": 6,
                "stack": false,
                "steppedLine": false,
                "targets": [
                  {
                    "expr": "irate(container_network_transmit_bytes_total{image!=\"\"}[5m])",
                    "intervalFactor": 2,
                    "legendFormat": "{{name}}",
                    "refId": "A",
                    "step": 20
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Network Tx",
                "tooltip": {
                  "msResolution": false,
                  "shared": true,
                  "sort": 0,
                  "value_type": "cumulative"
                },
                "type": "graph",
                "xaxis": {
                  "show": true
                },
                "yaxes": [
                  {
                    "format": "Bps",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  }
                ]
              }
            ],
            "title": "New row"
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "timepicker": {
          "refresh_intervals": [
            "5s",
            "10s",
            "30s",
            "1m",
            "5m",
            "15m",
            "30m",
            "1h",
            "2h",
            "1d"
          ],
          "time_options": [
            "5m",
            "15m",
            "1h",
            "6h",
            "12h",
            "24h",
            "2d",
            "7d",
            "30d"
          ]
        },
        "templating": {
          "list": []
        },
        "annotations": {
          "list": []
        },
        "refresh": "1m",
        "schemaVersion": 12,
        "version": 1,
        "links": [],
        "gnetId": 193
      }
    kubernetes-cluster-monitoring-dashboard.json: |-
      {
        "__inputs": [
          {
            "name": "DS_PROMETHEUS",
            "label": "prometheus",
            "description": "",
            "type": "datasource",
            "pluginId": "prometheus",
            "pluginName": "Prometheus"
          }
        ],
        "__requires": [
          {
            "type": "panel",
            "id": "singlestat",
            "name": "Singlestat",
            "version": ""
          },
          {
            "type": "panel",
            "id": "graph",
            "name": "Graph",
            "version": ""
          },
          {
            "type": "grafana",
            "id": "grafana",
            "name": "Grafana",
            "version": "3.1.1"
          },
          {
            "type": "datasource",
            "id": "prometheus",
            "name": "Prometheus",
            "version": "1.0.0"
          }
        ],
        "id": null,
        "title": "Kubernetes cluster monitoring (via Prometheus)",
        "description": "Monitor a Kubernetes cluster using Prometheus TSDB.  Shows overall cluster CPU / Memory / Disk usage as well as individual pod statistics. ",
        "tags": [
          "kubernetes"
        ],
        "style": "dark",
        "timezone": "browser",
        "editable": true,
        "hideControls": true,
        "sharedCrosshair": true,
        "rows": [
          {
            "collapse": false,
            "editable": true,
            "height": "250px",
            "panels": [
              {
                "cacheTimeout": null,
                "colorBackground": false,
                "colorValue": false,
                "colors": [
                  "rgba(50, 172, 45, 0.97)",
                  "rgba(237, 129, 40, 0.89)",
                  "rgba(245, 54, 54, 0.9)"
                ],
                "datasource": "${DS_PROMETHEUS}",
                "editable": true,
                "error": false,
                "format": "percent",
                "gauge": {
                  "maxValue": 100,
                  "minValue": 0,
                  "show": true,
                  "thresholdLabels": false,
                  "thresholdMarkers": true
                },
                "id": 4,
                "interval": null,
                "isNew": true,
                "links": [],
                "mappingType": 1,
                "mappingTypes": [
                  {
                    "name": "value to text",
                    "value": 1
                  },
                  {
                    "name": "range to text",
                    "value": 2
                  }
                ],
                "maxDataPoints": 100,
                "nullPointMode": "connected",
                "nullText": null,
                "postfix": "",
                "postfixFontSize": "50%",
                "prefix": "",
                "prefixFontSize": "50%",
                "rangeMaps": [
                  {
                    "from": "null",
                    "text": "N/A",
                    "to": "null"
                  }
                ],
                "span": 3,
                "sparkline": {
                  "fillColor": "rgba(31, 118, 189, 0.18)",
                  "full": false,
                  "lineColor": "rgb(31, 120, 193)",
                  "show": false
                },
                "targets": [
                  {
                    "expr": "(sum(node_memory_MemTotal) - sum(node_memory_MemFree+node_memory_Buffers+node_memory_Cached) ) / sum(node_memory_MemTotal) * 100",
                    "interval": "10s",
                    "intervalFactor": 1,
                    "refId": "A",
                    "step": 10
                  }
                ],
                "thresholds": "65, 90",
                "title": "Cluster memory usage",
                "type": "singlestat",
                "valueFontSize": "80%",
                "valueMaps": [
                  {
                    "op": "=",
                    "text": "N/A",
                    "value": "null"
                  }
                ],
                "valueName": "current"
              },
              {
                "cacheTimeout": null,
                "colorBackground": false,
                "colorValue": false,
                "colors": [
                  "rgba(50, 172, 45, 0.97)",
                  "rgba(237, 129, 40, 0.89)",
                  "rgba(245, 54, 54, 0.9)"
                ],
                "datasource": "${DS_PROMETHEUS}",
                "decimals": 2,
                "editable": true,
                "error": false,
                "format": "percent",
                "gauge": {
                  "maxValue": 100,
                  "minValue": 0,
                  "show": true,
                  "thresholdLabels": false,
                  "thresholdMarkers": true
                },
                "id": 6,
                "interval": null,
                "isNew": true,
                "links": [],
                "mappingType": 1,
                "mappingTypes": [
                  {
                    "name": "value to text",
                    "value": 1
                  },
                  {
                    "name": "range to text",
                    "value": 2
                  }
                ],
                "maxDataPoints": 100,
                "nullPointMode": "connected",
                "nullText": null,
                "postfix": "",
                "postfixFontSize": "50%",
                "prefix": "",
                "prefixFontSize": "50%",
                "rangeMaps": [
                  {
                    "from": "null",
                    "text": "N/A",
                    "to": "null"
                  }
                ],
                "span": 3,
                "sparkline": {
                  "fillColor": "rgba(31, 118, 189, 0.18)",
                  "full": false,
                  "lineColor": "rgb(31, 120, 193)",
                  "show": false
                },
                "targets": [
                  {
                    "expr": "sum(sum by (io_kubernetes_container_name)( rate(container_cpu_usage_seconds_total{image!=\"\"}[2m] ) )) / count(node_cpu{mode=\"system\"}) * 100",
                    "interval": "10s",
                    "intervalFactor": 1,
                    "refId": "A",
                    "step": 10
                  }
                ],
                "thresholds": "65, 90",
                "title": "Cluster CPU usage",
                "type": "singlestat",
                "valueFontSize": "80%",
                "valueMaps": [
                  {
                    "op": "=",
                    "text": "N/A",
                    "value": "null"
                  }
                ],
                "valueName": "current"
              },
              {
                "cacheTimeout": null,
                "colorBackground": false,
                "colorValue": false,
                "colors": [
                  "rgba(50, 172, 45, 0.97)",
                  "rgba(237, 129, 40, 0.89)",
                  "rgba(245, 54, 54, 0.9)"
                ],
                "datasource": "${DS_PROMETHEUS}",
                "decimals": 2,
                "editable": true,
                "error": false,
                "format": "percent",
                "gauge": {
                  "maxValue": 100,
                  "minValue": 0,
                  "show": true,
                  "thresholdLabels": false,
                  "thresholdMarkers": true
                },
                "id": 7,
                "interval": null,
                "isNew": true,
                "links": [],
                "mappingType": 1,
                "mappingTypes": [
                  {
                    "name": "value to text",
                    "value": 1
                  },
                  {
                    "name": "range to text",
                    "value": 2
                  }
                ],
                "maxDataPoints": 100,
                "nullPointMode": "connected",
                "nullText": null,
                "postfix": "",
                "postfixFontSize": "50%",
                "prefix": "",
                "prefixFontSize": "50%",
                "rangeMaps": [
                  {
                    "from": "null",
                    "text": "N/A",
                    "to": "null"
                  }
                ],
                "span": 3,
                "sparkline": {
                  "fillColor": "rgba(31, 118, 189, 0.18)",
                  "full": false,
                  "lineColor": "rgb(31, 120, 193)",
                  "show": false
                },
                "targets": [
                  {
                    "expr": "(sum(node_filesystem_size{mountpoint=\"/root-disk\"}) - sum(node_filesystem_free{mountpoint=\"/root-disk\"}) ) / sum(node_filesystem_size{mountpoint=\"/root-disk\"}) * 100",
                    "interval": "10s",
                    "intervalFactor": 1,
                    "metric": "",
                    "refId": "A",
                    "step": 10
                  }
                ],
                "thresholds": "65, 90",
                "title": "Cluster Filesystem usage",
                "type": "singlestat",
                "valueFontSize": "80%",
                "valueMaps": [
                  {
                    "op": "=",
                    "text": "N/A",
                    "value": "null"
                  }
                ],
                "valueName": "current"
              },
              {
                "cacheTimeout": null,
                "colorBackground": false,
                "colorValue": false,
                "colors": [
                  "rgba(50, 172, 45, 0.97)",
                  "rgba(237, 129, 40, 0.89)",
                  "rgba(245, 54, 54, 0.9)"
                ],
                "datasource": "${DS_PROMETHEUS}",
                "decimals": 2,
                "editable": true,
                "error": false,
                "format": "percent",
                "gauge": {
                  "maxValue": 100,
                  "minValue": 0,
                  "show": true,
                  "thresholdLabels": false,
                  "thresholdMarkers": true
                },
                "id": 9,
                "interval": null,
                "isNew": true,
                "links": [],
                "mappingType": 1,
                "mappingTypes": [
                  {
                    "name": "value to text",
                    "value": 1
                  },
                  {
                    "name": "range to text",
                    "value": 2
                  }
                ],
                "maxDataPoints": 100,
                "nullPointMode": "connected",
                "nullText": null,
                "postfix": "",
                "postfixFontSize": "50%",
                "prefix": "",
                "prefixFontSize": "50%",
                "rangeMaps": [
                  {
                    "from": "null",
                    "text": "N/A",
                    "to": "null"
                  }
                ],
                "span": 3,
                "sparkline": {
                  "fillColor": "rgba(31, 118, 189, 0.18)",
                  "full": false,
                  "lineColor": "rgb(31, 120, 193)",
                  "show": false
                },
                "targets": [
                  {
                    "expr": "(sum(node_filesystem_size{mountpoint=\"/data-disk\"}) - sum(node_filesystem_free{mountpoint=\"/data-disk\"}) ) / sum(node_filesystem_size{mountpoint=\"/data-disk\"}) * 100",
                    "interval": "10s",
                    "intervalFactor": 1,
                    "metric": "",
                    "refId": "A",
                    "step": 10
                  }
                ],
                "thresholds": "65, 90",
                "title": "Cluster Data Filesystem usage",
                "type": "singlestat",
                "valueFontSize": "80%",
                "valueMaps": [
                  {
                    "op": "=",
                    "text": "N/A",
                    "value": "null"
                  }
                ],
                "valueName": "current"
              }
            ],
            "title": "Row"
          },
          {
            "collapse": false,
            "editable": true,
            "height": "250px",
            "panels": [
              {
                "aliasColors": {},
                "bars": false,
                "datasource": "${DS_PROMETHEUS}",
                "decimals": 3,
                "editable": true,
                "error": false,
                "fill": 0,
                "grid": {
                  "threshold1": null,
                  "threshold1Color": "rgba(216, 200, 27, 0.27)",
                  "threshold2": null,
                  "threshold2Color": "rgba(234, 112, 112, 0.22)"
                },
                "id": 3,
                "isNew": true,
                "legend": {
                  "alignAsTable": true,
                  "avg": true,
                  "current": true,
                  "max": false,
                  "min": false,
                  "rightSide": true,
                  "show": true,
                  "sort": "current",
                  "sortDesc": true,
                  "total": false,
                  "values": true
                },
                "lines": true,
                "linewidth": 2,
                "links": [],
                "nullPointMode": "connected",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [],
                "span": 12,
                "stack": false,
                "steppedLine": false,
                "targets": [
                  {
                    "expr": "sum by (kubernetes_pod_name, namespace )( rate(container_cpu_usage_seconds_total{image!=\"\",kubernetes_pod_name!=\"\"}[2m] ) )",
                    "hide": false,
                    "interval": "10s",
                    "intervalFactor": 1,
                    "legendFormat": "{{ kubernetes_pod_name }} ({{ namespace }})",
                    "metric": "container_cpu",
                    "refId": "A",
                    "step": 10
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Pod CPU usage",
                "tooltip": {
                  "msResolution": true,
                  "shared": true,
                  "sort": 0,
                  "value_type": "cumulative"
                },
                "type": "graph",
                "xaxis": {
                  "show": true
                },
                "yaxes": [
                  {
                    "format": "percent",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  }
                ]
              }
            ],
            "title": "New row"
          },
          {
            "collapse": false,
            "editable": true,
            "height": "250px",
            "panels": [
              {
                "aliasColors": {},
                "bars": false,
                "datasource": "${DS_PROMETHEUS}",
                "decimals": 2,
                "editable": true,
                "error": false,
                "fill": 0,
                "grid": {
                  "threshold1": null,
                  "threshold1Color": "rgba(216, 200, 27, 0.27)",
                  "threshold2": null,
                  "threshold2Color": "rgba(234, 112, 112, 0.22)"
                },
                "id": 2,
                "isNew": true,
                "legend": {
                  "alignAsTable": true,
                  "avg": true,
                  "current": true,
                  "max": false,
                  "min": false,
                  "rightSide": true,
                  "show": true,
                  "sideWidth": 200,
                  "sort": "current",
                  "sortDesc": true,
                  "total": false,
                  "values": true
                },
                "lines": true,
                "linewidth": 2,
                "links": [],
                "nullPointMode": "connected",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [],
                "span": 12,
                "stack": false,
                "steppedLine": false,
                "targets": [
                  {
                    "expr": "sort_desc(sum(container_memory_usage_bytes{image!=\"\",kubernetes_pod_name!=\"\"}) by (kubernetes_pod_name, namespace))",
                    "interval": "10s",
                    "intervalFactor": 1,
                    "legendFormat": "{{ kubernetes_pod_name }} ({{ namespace }})",
                    "metric": "container_memory_usage:sort_desc",
                    "refId": "A",
                    "step": 10
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Pod memory usage",
                "tooltip": {
                  "msResolution": false,
                  "shared": true,
                  "sort": 0,
                  "value_type": "cumulative"
                },
                "type": "graph",
                "xaxis": {
                  "show": true
                },
                "yaxes": [
                  {
                    "format": "bytes",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  }
                ]
              },
              {
                "aliasColors": {},
                "bars": false,
                "datasource": "${DS_PROMETHEUS}",
                "decimals": 2,
                "editable": true,
                "error": false,
                "fill": 0,
                "grid": {
                  "threshold1": null,
                  "threshold1Color": "rgba(216, 200, 27, 0.27)",
                  "threshold2": null,
                  "threshold2Color": "rgba(234, 112, 112, 0.22)"
                },
                "id": 8,
                "isNew": true,
                "legend": {
                  "alignAsTable": true,
                  "avg": true,
                  "current": true,
                  "max": false,
                  "min": false,
                  "rightSide": true,
                  "show": true,
                  "sideWidth": 200,
                  "sort": "current",
                  "sortDesc": true,
                  "total": false,
                  "values": true
                },
                "lines": true,
                "linewidth": 2,
                "links": [],
                "nullPointMode": "connected",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [],
                "span": 12,
                "stack": false,
                "steppedLine": false,
                "targets": [
                  {
                    "expr": "sort_desc(sum by (kubernetes_pod_name, namespace) (rate (container_network_receive_bytes_total{name!=\"\",kubernetes_pod_name!=\"\"}[2m]) ))",
                    "interval": "10s",
                    "intervalFactor": 1,
                    "legendFormat": "{{ kubernetes_pod_name }} ({{namespace}})",
                    "metric": "network",
                    "refId": "A",
                    "step": 10
                  },
                  {
                    "expr": "sort_desc(sum by (kubernetes_pod_name, namespace) (rate (container_network_transmit_bytes_total{name!=\"\",kubernetes_pod_name!=\"\"}[2m]) ))",
                    "interval": "10s",
                    "intervalFactor": 1,
                    "legendFormat": "{{ kubernetes_pod_name }} ({{namespace}})",
                    "metric": "network",
                    "refId": "B",
                    "step": 10
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Pod Network i/o",
                "tooltip": {
                  "msResolution": false,
                  "shared": true,
                  "sort": 0,
                  "value_type": "cumulative"
                },
                "type": "graph",
                "xaxis": {
                  "show": true
                },
                "yaxes": [
                  {
                    "format": "bytes",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  }
                ]
              }
            ],
            "title": "New row"
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "timepicker": {
          "refresh_intervals": [
            "5s",
            "10s",
            "30s",
            "1m",
            "5m",
            "15m",
            "30m",
            "1h",
            "2h",
            "1d"
          ],
          "time_options": [
            "5m",
            "15m",
            "1h",
            "6h",
            "12h",
            "24h",
            "2d",
            "7d",
            "30d"
          ]
        },
        "templating": {
          "list": []
        },
        "annotations": {
          "list": []
        },
        "refresh": "1m",
        "schemaVersion": 12,
        "version": 5,
        "links": [],
        "gnetId": 162
      }
    kubernetes-resources-usage-dashboard.json: |
      {
        "__inputs": [
          {
            "name": "DS_PROMETHEUS",
            "label": "prometheus",
            "description": "",
            "type": "datasource",
            "pluginId": "prometheus",
            "pluginName": "Prometheus"
          }
        ],
        "__requires": [
          {
            "type": "panel",
            "id": "graph",
            "name": "Graph",
            "version": ""
          },
          {
            "type": "panel",
            "id": "singlestat",
            "name": "Singlestat",
            "version": ""
          },
          {
            "type": "grafana",
            "id": "grafana",
            "name": "Grafana",
            "version": "3.1.1"
          },
          {
            "type": "datasource",
            "id": "prometheus",
            "name": "Prometheus",
            "version": "1.0.0"
          }
        ],
        "id": null,
        "title": "Kubernetes resources usage monitoring (via Prometheus)",
        "description": "Monitors Kubernetes cluster using Prometheus. Shows overall cluster CPU / Memory / Filesystem usage as well as individual pod, containers, systemd services statistics. Uses cAdvisor metrics only.",
        "tags": [
          "kubernetes"
        ],
        "style": "dark",
        "timezone": "browser",
        "editable": true,
        "hideControls": false,
        "sharedCrosshair": false,
        "rows": [
          {
            "collapse": false,
            "editable": true,
            "height": "200px",
            "panels": [
              {
                "aliasColors": {},
                "bars": false,
                "datasource": "${DS_PROMETHEUS}",
                "decimals": 3,
                "editable": true,
                "error": false,
                "fill": 0,
                "grid": {
                  "threshold1": null,
                  "threshold1Color": "rgba(216, 200, 27, 0.27)",
                  "threshold2": null,
                  "threshold2Color": "rgba(234, 112, 112, 0.22)"
                },
                "height": "",
                "id": 34,
                "isNew": true,
                "legend": {
                  "alignAsTable": true,
                  "avg": true,
                  "current": true,
                  "max": false,
                  "min": false,
                  "rightSide": true,
                  "show": true,
                  "sort": "current",
                  "sortDesc": true,
                  "total": false,
                  "values": true
                },
                "lines": true,
                "linewidth": 2,
                "links": [],
                "nullPointMode": "connected",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [],
                "span": 12,
                "stack": false,
                "steppedLine": false,
                "targets": [
                  {
                    "expr": "(node_filesystem_size{mountpoint=\"/data-disk\"} - node_filesystem_free{mountpoint=\"/data-disk\"} ) / node_filesystem_size{mountpoint=\"/data-disk\"} * 100",
                    "interval": "10s",
                    "intervalFactor": 1,
                    "legendFormat": "{{ instance }}",
                    "metric": "",
                    "refId": "A",
                    "step": 10
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Nodes data disk usage",
                "tooltip": {
                  "msResolution": true,
                  "shared": true,
                  "sort": 2,
                  "value_type": "cumulative"
                },
                "transparent": false,
                "type": "graph",
                "xaxis": {
                  "show": true
                },
                "yaxes": [
                  {
                    "format": "none",
                    "label": "cores",
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": false
                  }
                ]
              }
            ],
            "title": "Network I/O pressure"
          },
          {
            "collapse": false,
            "editable": true,
            "height": "250px",
            "panels": [
              {
                "aliasColors": {},
                "bars": false,
                "datasource": "${DS_PROMETHEUS}",
                "decimals": 3,
                "editable": true,
                "error": false,
                "fill": 0,
                "grid": {
                  "threshold1": null,
                  "threshold1Color": "rgba(216, 200, 27, 0.27)",
                  "threshold2": null,
                  "threshold2Color": "rgba(234, 112, 112, 0.22)"
                },
                "height": "",
                "id": 33,
                "isNew": true,
                "legend": {
                  "alignAsTable": true,
                  "avg": true,
                  "current": true,
                  "max": false,
                  "min": false,
                  "rightSide": true,
                  "show": true,
                  "sort": "current",
                  "sortDesc": true,
                  "total": false,
                  "values": true
                },
                "lines": true,
                "linewidth": 2,
                "links": [],
                "nullPointMode": "connected",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [],
                "span": 12,
                "stack": false,
                "steppedLine": false,
                "targets": [
                  {
                    "expr": "(node_filesystem_size{mountpoint=\"/root-disk\"} - node_filesystem_free{mountpoint=\"/root-disk\"} ) / node_filesystem_size{mountpoint=\"/root-disk\"} * 100",
                    "interval": "10s",
                    "intervalFactor": 1,
                    "legendFormat": "{{ instance }}",
                    "metric": "",
                    "refId": "A",
                    "step": 10
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Nodes root disk usage",
                "tooltip": {
                  "msResolution": true,
                  "shared": true,
                  "sort": 2,
                  "value_type": "cumulative"
                },
                "transparent": false,
                "type": "graph",
                "xaxis": {
                  "show": true
                },
                "yaxes": [
                  {
                    "format": "none",
                    "label": "cores",
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": false
                  }
                ]
              },
              {
                "aliasColors": {},
                "bars": false,
                "datasource": "${DS_PROMETHEUS}",
                "decimals": 3,
                "editable": true,
                "error": false,
                "fill": 0,
                "grid": {
                  "threshold1": null,
                  "threshold1Color": "rgba(216, 200, 27, 0.27)",
                  "threshold2": null,
                  "threshold2Color": "rgba(234, 112, 112, 0.22)"
                },
                "height": "",
                "id": 36,
                "isNew": true,
                "legend": {
                  "alignAsTable": true,
                  "avg": true,
                  "current": true,
                  "max": false,
                  "min": false,
                  "rightSide": true,
                  "show": true,
                  "sort": "current",
                  "sortDesc": true,
                  "total": false,
                  "values": true
                },
                "lines": true,
                "linewidth": 2,
                "links": [],
                "nullPointMode": "connected",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [],
                "span": 12,
                "stack": false,
                "steppedLine": false,
                "targets": [
                  {
                    "expr": "(((node_memory_MemTotal-node_memory_MemFree-node_memory_Cached)/(node_memory_MemTotal)*100))",
                    "interval": "10s",
                    "intervalFactor": 1,
                    "legendFormat": "{{ instance }}",
                    "metric": "node_cpu",
                    "refId": "A",
                    "step": 10
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Nodes Memory usage",
                "tooltip": {
                  "msResolution": true,
                  "shared": true,
                  "sort": 2,
                  "value_type": "cumulative"
                },
                "transparent": false,
                "type": "graph",
                "xaxis": {
                  "show": true
                },
                "yaxes": [
                  {
                    "format": "none",
                    "label": "cores",
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": false
                  }
                ]
              },
              {
                "aliasColors": {},
                "bars": false,
                "datasource": "${DS_PROMETHEUS}",
                "decimals": 3,
                "editable": true,
                "error": false,
                "fill": 0,
                "grid": {
                  "threshold1": null,
                  "threshold1Color": "rgba(216, 200, 27, 0.27)",
                  "threshold2": null,
                  "threshold2Color": "rgba(234, 112, 112, 0.22)"
                },
                "height": "",
                "id": 17,
                "isNew": true,
                "legend": {
                  "alignAsTable": true,
                  "avg": true,
                  "current": true,
                  "max": false,
                  "min": false,
                  "rightSide": true,
                  "show": true,
                  "sort": "current",
                  "sortDesc": true,
                  "total": false,
                  "values": true
                },
                "lines": true,
                "linewidth": 2,
                "links": [],
                "nullPointMode": "connected",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [],
                "span": 12,
                "stack": false,
                "steppedLine": false,
                "targets": [
                  {
                    "expr": "(100 - (avg by (instance) (irate(node_cpu{name=\"node-exporter\",mode=\"idle\"}[5m])) * 100))",
                    "interval": "10s",
                    "intervalFactor": 1,
                    "legendFormat": "{{ instance }}",
                    "metric": "node_cpu",
                    "refId": "A",
                    "step": 10
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Nodes CPU usage",
                "tooltip": {
                  "msResolution": true,
                  "shared": true,
                  "sort": 2,
                  "value_type": "cumulative"
                },
                "transparent": false,
                "type": "graph",
                "xaxis": {
                  "show": true
                },
                "yaxes": [
                  {
                    "format": "none",
                    "label": "cores",
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": false
                  }
                ]
              },
              {
                "aliasColors": {},
                "bars": false,
                "datasource": "${DS_PROMETHEUS}",
                "decimals": 3,
                "editable": true,
                "error": false,
                "fill": 0,
                "grid": {
                  "threshold1": null,
                  "threshold1Color": "rgba(216, 200, 27, 0.27)",
                  "threshold2": null,
                  "threshold2Color": "rgba(234, 112, 112, 0.22)"
                },
                "height": "",
                "id": 35,
                "isNew": true,
                "legend": {
                  "alignAsTable": true,
                  "avg": true,
                  "current": true,
                  "max": false,
                  "min": false,
                  "rightSide": true,
                  "show": true,
                  "sort": "current",
                  "sortDesc": true,
                  "total": false,
                  "values": true
                },
                "lines": true,
                "linewidth": 2,
                "links": [],
                "nullPointMode": "connected",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [],
                "span": 12,
                "stack": false,
                "steppedLine": false,
                "targets": [
                  {
                    "expr": "sum (rate (container_cpu_usage_seconds_total{image!=\"\",name=~\"^k8s_.*\",kubernetes_io_hostname=~\"^$Node$\"}[2m])) by (io_kubernetes_pod_name)",
                    "interval": "10s",
                    "intervalFactor": 1,
                    "legendFormat": "{{ io_kubernetes_pod_name }}",
                    "metric": "container_cpu",
                    "refId": "A",
                    "step": 10
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Pods CPU usage",
                "tooltip": {
                  "msResolution": true,
                  "shared": true,
                  "sort": 2,
                  "value_type": "cumulative"
                },
                "transparent": false,
                "type": "graph",
                "xaxis": {
                  "show": true
                },
                "yaxes": [
                  {
                    "format": "none",
                    "label": "cores",
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": false
                  }
                ]
              },
              {
                "aliasColors": {},
                "bars": false,
                "datasource": "${DS_PROMETHEUS}",
                "decimals": 2,
                "editable": true,
                "error": false,
                "fill": 1,
                "grid": {
                  "threshold1": null,
                  "threshold1Color": "rgba(216, 200, 27, 0.27)",
                  "threshold2": null,
                  "threshold2Color": "rgba(234, 112, 112, 0.22)",
                  "thresholdLine": false
                },
                "height": "200px",
                "id": 32,
                "isNew": true,
                "legend": {
                  "alignAsTable": false,
                  "avg": true,
                  "current": true,
                  "max": false,
                  "min": false,
                  "rightSide": false,
                  "show": false,
                  "sideWidth": 200,
                  "sort": "current",
                  "sortDesc": true,
                  "total": false,
                  "values": true
                },
                "lines": true,
                "linewidth": 2,
                "links": [],
                "nullPointMode": "connected",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [],
                "span": 12,
                "stack": false,
                "steppedLine": false,
                "targets": [
                  {
                    "expr": "sum (rate (container_network_receive_bytes_total{kubernetes_io_hostname=~\"^$Node$\"}[2m]))",
                    "interval": "10s",
                    "intervalFactor": 1,
                    "legendFormat": "Received",
                    "metric": "network",
                    "refId": "A",
                    "step": 10
                  },
                  {
                    "expr": "- sum (rate (container_network_transmit_bytes_total{kubernetes_io_hostname=~\"^$Node$\"}[2m]))",
                    "interval": "10s",
                    "intervalFactor": 1,
                    "legendFormat": "Sent",
                    "metric": "network",
                    "refId": "B",
                    "step": 10
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Network I/O pressure",
                "tooltip": {
                  "msResolution": false,
                  "shared": true,
                  "sort": 0,
                  "value_type": "cumulative"
                },
                "transparent": false,
                "type": "graph",
                "xaxis": {
                  "show": true
                },
                "yaxes": [
                  {
                    "format": "Bps",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "Bps",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": false
                  }
                ]
              }
            ],
            "showTitle": false,
            "title": "Pods CPU usage"
          },
          {
            "collapse": false,
            "editable": true,
            "height": "250px",
            "panels": [
              {
                "cacheTimeout": null,
                "colorBackground": false,
                "colorValue": true,
                "colors": [
                  "rgba(50, 172, 45, 0.97)",
                  "rgba(237, 129, 40, 0.89)",
                  "rgba(245, 54, 54, 0.9)"
                ],
                "datasource": "${DS_PROMETHEUS}",
                "editable": true,
                "error": false,
                "format": "percent",
                "gauge": {
                  "maxValue": 100,
                  "minValue": 0,
                  "show": true,
                  "thresholdLabels": false,
                  "thresholdMarkers": true
                },
                "height": "180px",
                "id": 4,
                "interval": null,
                "isNew": true,
                "links": [],
                "mappingType": 1,
                "mappingTypes": [
                  {
                    "name": "value to text",
                    "value": 1
                  },
                  {
                    "name": "range to text",
                    "value": 2
                  }
                ],
                "maxDataPoints": 100,
                "nullPointMode": "connected",
                "nullText": null,
                "postfix": "",
                "postfixFontSize": "50%",
                "prefix": "",
                "prefixFontSize": "50%",
                "rangeMaps": [
                  {
                    "from": "null",
                    "text": "N/A",
                    "to": "null"
                  }
                ],
                "span": 4,
                "sparkline": {
                  "fillColor": "rgba(31, 118, 189, 0.18)",
                  "full": false,
                  "lineColor": "rgb(31, 120, 193)",
                  "show": false
                },
                "targets": [
                  {
                    "expr": "sum (container_memory_working_set_bytes{id=\"/\",kubernetes_io_hostname=~\"^$Node$\"}) / sum (machine_memory_bytes{kubernetes_io_hostname=~\"^$Node$\"}) * 100",
                    "interval": "10s",
                    "intervalFactor": 1,
                    "refId": "A",
                    "step": 10
                  }
                ],
                "thresholds": "65, 90",
                "title": "Cluster memory usage",
                "transparent": false,
                "type": "singlestat",
                "valueFontSize": "80%",
                "valueMaps": [
                  {
                    "op": "=",
                    "text": "N/A",
                    "value": "null"
                  }
                ],
                "valueName": "current"
              },
              {
                "cacheTimeout": null,
                "colorBackground": false,
                "colorValue": true,
                "colors": [
                  "rgba(50, 172, 45, 0.97)",
                  "rgba(237, 129, 40, 0.89)",
                  "rgba(245, 54, 54, 0.9)"
                ],
                "datasource": "${DS_PROMETHEUS}",
                "decimals": 2,
                "editable": true,
                "error": false,
                "format": "percent",
                "gauge": {
                  "maxValue": 100,
                  "minValue": 0,
                  "show": true,
                  "thresholdLabels": false,
                  "thresholdMarkers": true
                },
                "height": "180px",
                "id": 6,
                "interval": null,
                "isNew": true,
                "links": [],
                "mappingType": 1,
                "mappingTypes": [
                  {
                    "name": "value to text",
                    "value": 1
                  },
                  {
                    "name": "range to text",
                    "value": 2
                  }
                ],
                "maxDataPoints": 100,
                "nullPointMode": "connected",
                "nullText": null,
                "postfix": "",
                "postfixFontSize": "50%",
                "prefix": "",
                "prefixFontSize": "50%",
                "rangeMaps": [
                  {
                    "from": "null",
                    "text": "N/A",
                    "to": "null"
                  }
                ],
                "span": 4,
                "sparkline": {
                  "fillColor": "rgba(31, 118, 189, 0.18)",
                  "full": false,
                  "lineColor": "rgb(31, 120, 193)",
                  "show": false
                },
                "targets": [
                  {
                    "expr": "sum (rate (container_cpu_usage_seconds_total{id=\"/\",kubernetes_io_hostname=~\"^$Node$\"}[2m])) / sum (machine_cpu_cores{kubernetes_io_hostname=~\"^$Node$\"}) * 100",
                    "interval": "10s",
                    "intervalFactor": 1,
                    "refId": "A",
                    "step": 10
                  }
                ],
                "thresholds": "65, 90",
                "title": "Cluster CPU usage",
                "type": "singlestat",
                "valueFontSize": "80%",
                "valueMaps": [
                  {
                    "op": "=",
                    "text": "N/A",
                    "value": "null"
                  }
                ],
                "valueName": "current"
              },
              {
                "cacheTimeout": null,
                "colorBackground": false,
                "colorValue": true,
                "colors": [
                  "rgba(50, 172, 45, 0.97)",
                  "rgba(237, 129, 40, 0.89)",
                  "rgba(245, 54, 54, 0.9)"
                ],
                "datasource": "${DS_PROMETHEUS}",
                "decimals": 2,
                "editable": true,
                "error": false,
                "format": "percent",
                "gauge": {
                  "maxValue": 100,
                  "minValue": 0,
                  "show": true,
                  "thresholdLabels": false,
                  "thresholdMarkers": true
                },
                "height": "180px",
                "id": 7,
                "interval": null,
                "isNew": true,
                "links": [],
                "mappingType": 1,
                "mappingTypes": [
                  {
                    "name": "value to text",
                    "value": 1
                  },
                  {
                    "name": "range to text",
                    "value": 2
                  }
                ],
                "maxDataPoints": 100,
                "nullPointMode": "connected",
                "nullText": null,
                "postfix": "",
                "postfixFontSize": "50%",
                "prefix": "",
                "prefixFontSize": "50%",
                "rangeMaps": [
                  {
                    "from": "null",
                    "text": "N/A",
                    "to": "null"
                  }
                ],
                "span": 4,
                "sparkline": {
                  "fillColor": "rgba(31, 118, 189, 0.18)",
                  "full": false,
                  "lineColor": "rgb(31, 120, 193)",
                  "show": false
                },
                "targets": [
                  {
                    "expr": "sum (container_fs_usage_bytes{device=\"/dev/mapper/vglocal20160809-root00\",id=\"/\",kubernetes_io_hostname=~\"^$Node$\"}) / sum (container_fs_limit_bytes{device=\"/dev/mapper/vglocal20160809-root00\",id=\"/\",kubernetes_io_hostname=~\"^$Node$\"}) * 100",
                    "interval": "10s",
                    "intervalFactor": 1,
                    "legendFormat": "",
                    "metric": "",
                    "refId": "A",
                    "step": 10
                  }
                ],
                "thresholds": "65, 90",
                "title": "Cluster filesystem usage",
                "type": "singlestat",
                "valueFontSize": "80%",
                "valueMaps": [
                  {
                    "op": "=",
                    "text": "N/A",
                    "value": "null"
                  }
                ],
                "valueName": "current"
              },
              {
                "cacheTimeout": null,
                "colorBackground": false,
                "colorValue": false,
                "colors": [
                  "rgba(50, 172, 45, 0.97)",
                  "rgba(237, 129, 40, 0.89)",
                  "rgba(245, 54, 54, 0.9)"
                ],
                "datasource": "${DS_PROMETHEUS}",
                "decimals": 2,
                "editable": true,
                "error": false,
                "format": "bytes",
                "gauge": {
                  "maxValue": 100,
                  "minValue": 0,
                  "show": false,
                  "thresholdLabels": false,
                  "thresholdMarkers": true
                },
                "height": "1px",
                "id": 9,
                "interval": null,
                "isNew": true,
                "links": [],
                "mappingType": 1,
                "mappingTypes": [
                  {
                    "name": "value to text",
                    "value": 1
                  },
                  {
                    "name": "range to text",
                    "value": 2
                  }
                ],
                "maxDataPoints": 100,
                "nullPointMode": "connected",
                "nullText": null,
                "postfix": "",
                "postfixFontSize": "20%",
                "prefix": "",
                "prefixFontSize": "20%",
                "rangeMaps": [
                  {
                    "from": "null",
                    "text": "N/A",
                    "to": "null"
                  }
                ],
                "span": 2,
                "sparkline": {
                  "fillColor": "rgba(31, 118, 189, 0.18)",
                  "full": false,
                  "lineColor": "rgb(31, 120, 193)",
                  "show": false
                },
                "targets": [
                  {
                    "expr": "sum (container_memory_working_set_bytes{id=\"/\",kubernetes_io_hostname=~\"^$Node$\"})",
                    "interval": "10s",
                    "intervalFactor": 1,
                    "refId": "A",
                    "step": 10
                  }
                ],
                "thresholds": "",
                "title": "Used",
                "type": "singlestat",
                "valueFontSize": "50%",
                "valueMaps": [
                  {
                    "op": "=",
                    "text": "N/A",
                    "value": "null"
                  }
                ],
                "valueName": "current"
              },
              {
                "cacheTimeout": null,
                "colorBackground": false,
                "colorValue": false,
                "colors": [
                  "rgba(50, 172, 45, 0.97)",
                  "rgba(237, 129, 40, 0.89)",
                  "rgba(245, 54, 54, 0.9)"
                ],
                "datasource": "${DS_PROMETHEUS}",
                "decimals": 2,
                "editable": true,
                "error": false,
                "format": "bytes",
                "gauge": {
                  "maxValue": 100,
                  "minValue": 0,
                  "show": false,
                  "thresholdLabels": false,
                  "thresholdMarkers": true
                },
                "height": "1px",
                "id": 10,
                "interval": null,
                "isNew": true,
                "links": [],
                "mappingType": 1,
                "mappingTypes": [
                  {
                    "name": "value to text",
                    "value": 1
                  },
                  {
                    "name": "range to text",
                    "value": 2
                  }
                ],
                "maxDataPoints": 100,
                "nullPointMode": "connected",
                "nullText": null,
                "postfix": "",
                "postfixFontSize": "50%",
                "prefix": "",
                "prefixFontSize": "50%",
                "rangeMaps": [
                  {
                    "from": "null",
                    "text": "N/A",
                    "to": "null"
                  }
                ],
                "span": 2,
                "sparkline": {
                  "fillColor": "rgba(31, 118, 189, 0.18)",
                  "full": false,
                  "lineColor": "rgb(31, 120, 193)",
                  "show": false
                },
                "targets": [
                  {
                    "expr": "sum (machine_memory_bytes{kubernetes_io_hostname=~\"^$Node$\"})",
                    "interval": "10s",
                    "intervalFactor": 1,
                    "refId": "A",
                    "step": 10
                  }
                ],
                "thresholds": "",
                "title": "Total",
                "type": "singlestat",
                "valueFontSize": "50%",
                "valueMaps": [
                  {
                    "op": "=",
                    "text": "N/A",
                    "value": "null"
                  }
                ],
                "valueName": "current"
              },
              {
                "cacheTimeout": null,
                "colorBackground": false,
                "colorValue": false,
                "colors": [
                  "rgba(50, 172, 45, 0.97)",
                  "rgba(237, 129, 40, 0.89)",
                  "rgba(245, 54, 54, 0.9)"
                ],
                "datasource": "${DS_PROMETHEUS}",
                "decimals": 2,
                "editable": true,
                "error": false,
                "format": "none",
                "gauge": {
                  "maxValue": 100,
                  "minValue": 0,
                  "show": false,
                  "thresholdLabels": false,
                  "thresholdMarkers": true
                },
                "height": "1px",
                "id": 11,
                "interval": null,
                "isNew": true,
                "links": [],
                "mappingType": 1,
                "mappingTypes": [
                  {
                    "name": "value to text",
                    "value": 1
                  },
                  {
                    "name": "range to text",
                    "value": 2
                  }
                ],
                "maxDataPoints": 100,
                "nullPointMode": "connected",
                "nullText": null,
                "postfix": " cores",
                "postfixFontSize": "30%",
                "prefix": "",
                "prefixFontSize": "50%",
                "rangeMaps": [
                  {
                    "from": "null",
                    "text": "N/A",
                    "to": "null"
                  }
                ],
                "span": 2,
                "sparkline": {
                  "fillColor": "rgba(31, 118, 189, 0.18)",
                  "full": false,
                  "lineColor": "rgb(31, 120, 193)",
                  "show": false
                },
                "targets": [
                  {
                    "expr": "sum (rate (container_cpu_usage_seconds_total{id=\"/\",kubernetes_io_hostname=~\"^$Node$\"}[2m]))",
                    "interval": "1m",
                    "intervalFactor": 1,
                    "refId": "A",
                    "step": 60
                  }
                ],
                "thresholds": "",
                "title": "Used",
                "type": "singlestat",
                "valueFontSize": "50%",
                "valueMaps": [
                  {
                    "op": "=",
                    "text": "N/A",
                    "value": "null"
                  }
                ],
                "valueName": "current"
              },
              {
                "cacheTimeout": null,
                "colorBackground": false,
                "colorValue": false,
                "colors": [
                  "rgba(50, 172, 45, 0.97)",
                  "rgba(237, 129, 40, 0.89)",
                  "rgba(245, 54, 54, 0.9)"
                ],
                "datasource": "${DS_PROMETHEUS}",
                "decimals": 2,
                "editable": true,
                "error": false,
                "format": "none",
                "gauge": {
                  "maxValue": 100,
                  "minValue": 0,
                  "show": false,
                  "thresholdLabels": false,
                  "thresholdMarkers": true
                },
                "height": "1px",
                "id": 12,
                "interval": null,
                "isNew": true,
                "links": [],
                "mappingType": 1,
                "mappingTypes": [
                  {
                    "name": "value to text",
                    "value": 1
                  },
                  {
                    "name": "range to text",
                    "value": 2
                  }
                ],
                "maxDataPoints": 100,
                "nullPointMode": "connected",
                "nullText": null,
                "postfix": " cores",
                "postfixFontSize": "30%",
                "prefix": "",
                "prefixFontSize": "50%",
                "rangeMaps": [
                  {
                    "from": "null",
                    "text": "N/A",
                    "to": "null"
                  }
                ],
                "span": 2,
                "sparkline": {
                  "fillColor": "rgba(31, 118, 189, 0.18)",
                  "full": false,
                  "lineColor": "rgb(31, 120, 193)",
                  "show": false
                },
                "targets": [
                  {
                    "expr": "sum (machine_cpu_cores{kubernetes_io_hostname=~\"^$Node$\"})",
                    "interval": "10s",
                    "intervalFactor": 1,
                    "refId": "A",
                    "step": 10
                  }
                ],
                "thresholds": "",
                "title": "Total",
                "type": "singlestat",
                "valueFontSize": "50%",
                "valueMaps": [
                  {
                    "op": "=",
                    "text": "N/A",
                    "value": "null"
                  }
                ],
                "valueName": "current"
              },
              {
                "cacheTimeout": null,
                "colorBackground": false,
                "colorValue": false,
                "colors": [
                  "rgba(50, 172, 45, 0.97)",
                  "rgba(237, 129, 40, 0.89)",
                  "rgba(245, 54, 54, 0.9)"
                ],
                "datasource": "${DS_PROMETHEUS}",
                "decimals": 2,
                "editable": true,
                "error": false,
                "format": "bytes",
                "gauge": {
                  "maxValue": 100,
                  "minValue": 0,
                  "show": false,
                  "thresholdLabels": false,
                  "thresholdMarkers": true
                },
                "height": "1px",
                "id": 13,
                "interval": null,
                "isNew": true,
                "links": [],
                "mappingType": 1,
                "mappingTypes": [
                  {
                    "name": "value to text",
                    "value": 1
                  },
                  {
                    "name": "range to text",
                    "value": 2
                  }
                ],
                "maxDataPoints": 100,
                "nullPointMode": "connected",
                "nullText": null,
                "postfix": "",
                "postfixFontSize": "50%",
                "prefix": "",
                "prefixFontSize": "50%",
                "rangeMaps": [
                  {
                    "from": "null",
                    "text": "N/A",
                    "to": "null"
                  }
                ],
                "span": 2,
                "sparkline": {
                  "fillColor": "rgba(31, 118, 189, 0.18)",
                  "full": false,
                  "lineColor": "rgb(31, 120, 193)",
                  "show": false
                },
                "targets": [
                  {
                    "expr": "sum (container_fs_usage_bytes{device=\"/dev/mapper/vglocal20160809-root00\",id=\"/\",kubernetes_io_hostname=~\"^$Node$\"})",
                    "interval": "10s",
                    "intervalFactor": 1,
                    "refId": "A",
                    "step": 10
                  }
                ],
                "thresholds": "",
                "title": "Used",
                "type": "singlestat",
                "valueFontSize": "50%",
                "valueMaps": [
                  {
                    "op": "=",
                    "text": "N/A",
                    "value": "null"
                  }
                ],
                "valueName": "current"
              },
              {
                "cacheTimeout": null,
                "colorBackground": false,
                "colorValue": false,
                "colors": [
                  "rgba(50, 172, 45, 0.97)",
                  "rgba(237, 129, 40, 0.89)",
                  "rgba(245, 54, 54, 0.9)"
                ],
                "datasource": "${DS_PROMETHEUS}",
                "decimals": 2,
                "editable": true,
                "error": false,
                "format": "bytes",
                "gauge": {
                  "maxValue": 100,
                  "minValue": 0,
                  "show": false,
                  "thresholdLabels": false,
                  "thresholdMarkers": true
                },
                "height": "1px",
                "id": 14,
                "interval": null,
                "isNew": true,
                "links": [],
                "mappingType": 1,
                "mappingTypes": [
                  {
                    "name": "value to text",
                    "value": 1
                  },
                  {
                    "name": "range to text",
                    "value": 2
                  }
                ],
                "maxDataPoints": 100,
                "nullPointMode": "connected",
                "nullText": null,
                "postfix": "",
                "postfixFontSize": "50%",
                "prefix": "",
                "prefixFontSize": "50%",
                "rangeMaps": [
                  {
                    "from": "null",
                    "text": "N/A",
                    "to": "null"
                  }
                ],
                "span": 2,
                "sparkline": {
                  "fillColor": "rgba(31, 118, 189, 0.18)",
                  "full": false,
                  "lineColor": "rgb(31, 120, 193)",
                  "show": false
                },
                "targets": [
                  {
                    "expr": "sum (container_fs_limit_bytes{device=\"/dev/mapper/vglocal20160809-root00\",id=\"/\",kubernetes_io_hostname=~\"^$Node$\"})",
                    "interval": "10s",
                    "intervalFactor": 1,
                    "refId": "A",
                    "step": 10
                  }
                ],
                "thresholds": "",
                "title": "Total",
                "type": "singlestat",
                "valueFontSize": "50%",
                "valueMaps": [
                  {
                    "op": "=",
                    "text": "N/A",
                    "value": "null"
                  }
                ],
                "valueName": "current"
              }
            ],
            "showTitle": false,
            "title": "Total usage"
          },
          {
            "collapse": true,
            "editable": true,
            "height": "250px",
            "panels": [
              {
                "aliasColors": {},
                "bars": false,
                "datasource": "${DS_PROMETHEUS}",
                "decimals": 3,
                "editable": true,
                "error": false,
                "fill": 0,
                "grid": {
                  "threshold1": null,
                  "threshold1Color": "rgba(216, 200, 27, 0.27)",
                  "threshold2": null,
                  "threshold2Color": "rgba(234, 112, 112, 0.22)"
                },
                "height": "",
                "id": 23,
                "isNew": true,
                "legend": {
                  "alignAsTable": true,
                  "avg": true,
                  "current": true,
                  "max": false,
                  "min": false,
                  "rightSide": true,
                  "show": true,
                  "sort": "current",
                  "sortDesc": true,
                  "total": false,
                  "values": true
                },
                "lines": true,
                "linewidth": 2,
                "links": [],
                "nullPointMode": "connected",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [],
                "span": 12,
                "stack": false,
                "steppedLine": false,
                "targets": [
                  {
                    "expr": "sum (rate (container_cpu_usage_seconds_total{systemd_service_name!=\"\",kubernetes_io_hostname=~\"^$Node$\"}[2m])) by (systemd_service_name)",
                    "hide": false,
                    "interval": "10s",
                    "intervalFactor": 1,
                    "legendFormat": "{{ systemd_service_name }}",
                    "metric": "container_cpu",
                    "refId": "A",
                    "step": 10
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "System services CPU usage",
                "tooltip": {
                  "msResolution": true,
                  "shared": true,
                  "sort": 2,
                  "value_type": "cumulative"
                },
                "type": "graph",
                "xaxis": {
                  "show": true
                },
                "yaxes": [
                  {
                    "format": "none",
                    "label": "cores",
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": false
                  }
                ]
              }
            ],
            "title": "System services CPU usage"
          },
          {
            "collapse": false,
            "editable": true,
            "height": "250px",
            "panels": [
              {
                "aliasColors": {},
                "bars": false,
                "datasource": "${DS_PROMETHEUS}",
                "decimals": 3,
                "editable": true,
                "error": false,
                "fill": 0,
                "grid": {
                  "threshold1": null,
                  "threshold1Color": "rgba(216, 200, 27, 0.27)",
                  "threshold2": null,
                  "threshold2Color": "rgba(234, 112, 112, 0.22)"
                },
                "height": "",
                "id": 24,
                "isNew": true,
                "legend": {
                  "alignAsTable": true,
                  "avg": true,
                  "current": true,
                  "hideEmpty": false,
                  "hideZero": false,
                  "max": false,
                  "min": false,
                  "rightSide": true,
                  "show": true,
                  "sideWidth": null,
                  "sort": "current",
                  "sortDesc": true,
                  "total": false,
                  "values": true
                },
                "lines": true,
                "linewidth": 2,
                "links": [],
                "nullPointMode": "connected",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [],
                "span": 12,
                "stack": false,
                "steppedLine": false,
                "targets": [
                  {
                    "expr": "sum (rate (container_cpu_usage_seconds_total{image!=\"\",name=~\"^k8s_.*\",io_kubernetes_container_name!=\"POD\",kubernetes_io_hostname=~\"^$Node$\"}[2m])) by (io_kubernetes_container_name, io_kubernetes_pod_name)",
                    "hide": false,
                    "interval": "10s",
                    "intervalFactor": 1,
                    "legendFormat": "pod: {{ io_kubernetes_pod_name }} | {{ io_kubernetes_container_name }}",
                    "metric": "container_cpu",
                    "refId": "A",
                    "step": 10
                  },
                  {
                    "expr": "sum (rate (container_cpu_usage_seconds_total{image!=\"\",name!~\"^k8s_.*\",kubernetes_io_hostname=~\"^$Node$\"}[2m])) by (kubernetes_io_hostname, name, image)",
                    "hide": false,
                    "interval": "10s",
                    "intervalFactor": 1,
                    "legendFormat": "docker: {{ kubernetes_io_hostname }} | {{ image }} ({{ name }})",
                    "metric": "container_cpu",
                    "refId": "B",
                    "step": 10
                  },
                  {
                    "expr": "sum (rate (container_cpu_usage_seconds_total{rkt_container_name!=\"\",kubernetes_io_hostname=~\"^$Node$\"}[2m])) by (kubernetes_io_hostname, rkt_container_name)",
                    "interval": "10s",
                    "intervalFactor": 1,
                    "legendFormat": "rkt: {{ kubernetes_io_hostname }} | {{ rkt_container_name }}",
                    "metric": "container_cpu",
                    "refId": "C",
                    "step": 10
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Containers CPU usage",
                "tooltip": {
                  "msResolution": true,
                  "shared": true,
                  "sort": 2,
                  "value_type": "cumulative"
                },
                "type": "graph",
                "xaxis": {
                  "show": true
                },
                "yaxes": [
                  {
                    "format": "none",
                    "label": "cores",
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": false
                  }
                ]
              }
            ],
            "title": "Containers CPU usage"
          },
          {
            "collapse": false,
            "editable": true,
            "height": "500px",
            "panels": [
              {
                "aliasColors": {},
                "bars": false,
                "datasource": "${DS_PROMETHEUS}",
                "decimals": 3,
                "editable": true,
                "error": false,
                "fill": 0,
                "grid": {
                  "threshold1": null,
                  "threshold1Color": "rgba(216, 200, 27, 0.27)",
                  "threshold2": null,
                  "threshold2Color": "rgba(234, 112, 112, 0.22)"
                },
                "id": 20,
                "isNew": true,
                "legend": {
                  "alignAsTable": true,
                  "avg": true,
                  "current": true,
                  "max": false,
                  "min": false,
                  "rightSide": false,
                  "show": true,
                  "sort": "current",
                  "sortDesc": true,
                  "total": false,
                  "values": true
                },
                "lines": true,
                "linewidth": 2,
                "links": [],
                "nullPointMode": "connected",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [],
                "span": 12,
                "stack": false,
                "steppedLine": false,
                "targets": [
                  {
                    "expr": "sum (rate (container_cpu_usage_seconds_total{id!=\"/\",kubernetes_io_hostname=~\"^$Node$\"}[2m])) by (id)",
                    "hide": false,
                    "interval": "10s",
                    "intervalFactor": 1,
                    "legendFormat": "{{ id }}",
                    "metric": "container_cpu",
                    "refId": "A",
                    "step": 10
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "All processes CPU usage",
                "tooltip": {
                  "msResolution": true,
                  "shared": true,
                  "sort": 2,
                  "value_type": "cumulative"
                },
                "type": "graph",
                "xaxis": {
                  "show": true
                },
                "yaxes": [
                  {
                    "format": "percent",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": false
                  }
                ]
              }
            ],
            "repeat": null,
            "showTitle": false,
            "title": "All processes CPU usage"
          },
          {
            "collapse": false,
            "editable": true,
            "height": "250px",
            "panels": [
              {
                "aliasColors": {},
                "bars": false,
                "datasource": "${DS_PROMETHEUS}",
                "decimals": 2,
                "editable": true,
                "error": false,
                "fill": 0,
                "grid": {
                  "threshold1": null,
                  "threshold1Color": "rgba(216, 200, 27, 0.27)",
                  "threshold2": null,
                  "threshold2Color": "rgba(234, 112, 112, 0.22)"
                },
                "id": 25,
                "isNew": true,
                "legend": {
                  "alignAsTable": true,
                  "avg": true,
                  "current": true,
                  "max": false,
                  "min": false,
                  "rightSide": true,
                  "show": true,
                  "sideWidth": 200,
                  "sort": "current",
                  "sortDesc": true,
                  "total": false,
                  "values": true
                },
                "lines": true,
                "linewidth": 2,
                "links": [],
                "nullPointMode": "connected",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [],
                "span": 12,
                "stack": false,
                "steppedLine": false,
                "targets": [
                  {
                    "expr": "sum (container_memory_working_set_bytes{image!=\"\",name=~\"^k8s_.*\",kubernetes_io_hostname=~\"^$Node$\"}) by (io_kubernetes_pod_name)",
                    "interval": "10s",
                    "intervalFactor": 1,
                    "legendFormat": "{{ io_kubernetes_pod_name }}",
                    "metric": "container_memory_usage:sort_desc",
                    "refId": "A",
                    "step": 10
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Pods memory usage",
                "tooltip": {
                  "msResolution": false,
                  "shared": true,
                  "sort": 2,
                  "value_type": "cumulative"
                },
                "type": "graph",
                "xaxis": {
                  "show": true
                },
                "yaxes": [
                  {
                    "format": "bytes",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": false
                  }
                ]
              }
            ],
            "title": "Pods memory usage"
          },
          {
            "collapse": false,
            "editable": true,
            "height": "250px",
            "panels": [
              {
                "aliasColors": {},
                "bars": false,
                "datasource": "${DS_PROMETHEUS}",
                "decimals": 2,
                "editable": true,
                "error": false,
                "fill": 0,
                "grid": {
                  "threshold1": null,
                  "threshold1Color": "rgba(216, 200, 27, 0.27)",
                  "threshold2": null,
                  "threshold2Color": "rgba(234, 112, 112, 0.22)"
                },
                "id": 26,
                "isNew": true,
                "legend": {
                  "alignAsTable": true,
                  "avg": true,
                  "current": true,
                  "max": false,
                  "min": false,
                  "rightSide": true,
                  "show": true,
                  "sideWidth": 200,
                  "sort": "current",
                  "sortDesc": true,
                  "total": false,
                  "values": true
                },
                "lines": true,
                "linewidth": 2,
                "links": [],
                "nullPointMode": "connected",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [],
                "span": 12,
                "stack": false,
                "steppedLine": false,
                "targets": [
                  {
                    "expr": "sum (container_memory_working_set_bytes{systemd_service_name!=\"\",kubernetes_io_hostname=~\"^$Node$\"}) by (systemd_service_name)",
                    "interval": "10s",
                    "intervalFactor": 1,
                    "legendFormat": "{{ systemd_service_name }}",
                    "metric": "container_memory_usage:sort_desc",
                    "refId": "A",
                    "step": 10
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "System services memory usage",
                "tooltip": {
                  "msResolution": false,
                  "shared": true,
                  "sort": 2,
                  "value_type": "cumulative"
                },
                "type": "graph",
                "xaxis": {
                  "show": true
                },
                "yaxes": [
                  {
                    "format": "bytes",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": false
                  }
                ]
              }
            ],
            "title": "System services memory usage"
          },
          {
            "collapse": true,
            "editable": true,
            "height": "250px",
            "panels": [
              {
                "aliasColors": {},
                "bars": false,
                "datasource": "${DS_PROMETHEUS}",
                "decimals": 2,
                "editable": true,
                "error": false,
                "fill": 0,
                "grid": {
                  "threshold1": null,
                  "threshold1Color": "rgba(216, 200, 27, 0.27)",
                  "threshold2": null,
                  "threshold2Color": "rgba(234, 112, 112, 0.22)"
                },
                "id": 27,
                "isNew": true,
                "legend": {
                  "alignAsTable": true,
                  "avg": true,
                  "current": true,
                  "max": false,
                  "min": false,
                  "rightSide": true,
                  "show": true,
                  "sideWidth": 200,
                  "sort": "current",
                  "sortDesc": true,
                  "total": false,
                  "values": true
                },
                "lines": true,
                "linewidth": 2,
                "links": [],
                "nullPointMode": "connected",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [],
                "span": 12,
                "stack": false,
                "steppedLine": false,
                "targets": [
                  {
                    "expr": "sum (container_memory_working_set_bytes{image!=\"\",name=~\"^k8s_.*\",io_kubernetes_container_name!=\"POD\",kubernetes_io_hostname=~\"^$Node$\"}) by (io_kubernetes_container_name, io_kubernetes_pod_name)",
                    "interval": "10s",
                    "intervalFactor": 1,
                    "legendFormat": "pod: {{ io_kubernetes_pod_name }} | {{ io_kubernetes_container_name }}",
                    "metric": "container_memory_usage:sort_desc",
                    "refId": "A",
                    "step": 10
                  },
                  {
                    "expr": "sum (container_memory_working_set_bytes{image!=\"\",name!~\"^k8s_.*\",kubernetes_io_hostname=~\"^$Node$\"}) by (kubernetes_io_hostname, name, image)",
                    "interval": "10s",
                    "intervalFactor": 1,
                    "legendFormat": "docker: {{ kubernetes_io_hostname }} | {{ image }} ({{ name }})",
                    "metric": "container_memory_usage:sort_desc",
                    "refId": "B",
                    "step": 10
                  },
                  {
                    "expr": "sum (container_memory_working_set_bytes{rkt_container_name!=\"\",kubernetes_io_hostname=~\"^$Node$\"}) by (kubernetes_io_hostname, rkt_container_name)",
                    "interval": "10s",
                    "intervalFactor": 1,
                    "legendFormat": "rkt: {{ kubernetes_io_hostname }} | {{ rkt_container_name }}",
                    "metric": "container_memory_usage:sort_desc",
                    "refId": "C",
                    "step": 10
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Containers memory usage",
                "tooltip": {
                  "msResolution": false,
                  "shared": true,
                  "sort": 2,
                  "value_type": "cumulative"
                },
                "type": "graph",
                "xaxis": {
                  "show": true
                },
                "yaxes": [
                  {
                    "format": "bytes",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": false
                  }
                ]
              }
            ],
            "title": "Containers memory usage"
          },
          {
            "collapse": true,
            "editable": true,
            "height": "500px",
            "panels": [
              {
                "aliasColors": {},
                "bars": false,
                "datasource": "${DS_PROMETHEUS}",
                "decimals": 2,
                "editable": true,
                "error": false,
                "fill": 0,
                "grid": {
                  "threshold1": null,
                  "threshold1Color": "rgba(216, 200, 27, 0.27)",
                  "threshold2": null,
                  "threshold2Color": "rgba(234, 112, 112, 0.22)"
                },
                "id": 28,
                "isNew": true,
                "legend": {
                  "alignAsTable": true,
                  "avg": true,
                  "current": true,
                  "max": false,
                  "min": false,
                  "rightSide": false,
                  "show": true,
                  "sideWidth": 200,
                  "sort": "current",
                  "sortDesc": true,
                  "total": false,
                  "values": true
                },
                "lines": true,
                "linewidth": 2,
                "links": [],
                "nullPointMode": "connected",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [],
                "span": 12,
                "stack": false,
                "steppedLine": false,
                "targets": [
                  {
                    "expr": "sum (container_memory_working_set_bytes{id!=\"/\",kubernetes_io_hostname=~\"^$Node$\"}) by (id)",
                    "interval": "10s",
                    "intervalFactor": 1,
                    "legendFormat": "{{ id }}",
                    "metric": "container_memory_usage:sort_desc",
                    "refId": "A",
                    "step": 10
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "All processes memory usage",
                "tooltip": {
                  "msResolution": false,
                  "shared": true,
                  "sort": 2,
                  "value_type": "cumulative"
                },
                "type": "graph",
                "xaxis": {
                  "show": true
                },
                "yaxes": [
                  {
                    "format": "bytes",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": false
                  }
                ]
              }
            ],
            "title": "All processes memory usage"
          },
          {
            "collapse": false,
            "editable": true,
            "height": "250px",
            "panels": [
              {
                "aliasColors": {},
                "bars": false,
                "datasource": "${DS_PROMETHEUS}",
                "decimals": 2,
                "editable": true,
                "error": false,
                "fill": 1,
                "grid": {
                  "threshold1": null,
                  "threshold1Color": "rgba(216, 200, 27, 0.27)",
                  "threshold2": null,
                  "threshold2Color": "rgba(234, 112, 112, 0.22)"
                },
                "id": 16,
                "isNew": true,
                "legend": {
                  "alignAsTable": true,
                  "avg": true,
                  "current": true,
                  "max": false,
                  "min": false,
                  "rightSide": true,
                  "show": true,
                  "sideWidth": 200,
                  "sort": "current",
                  "sortDesc": true,
                  "total": false,
                  "values": true
                },
                "lines": true,
                "linewidth": 2,
                "links": [],
                "nullPointMode": "connected",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [],
                "span": 12,
                "stack": false,
                "steppedLine": false,
                "targets": [
                  {
                    "expr": "sum (rate (container_network_receive_bytes_total{image!=\"\",name=~\"^k8s_.*\",kubernetes_io_hostname=~\"^$Node$\"}[2m])) by (io_kubernetes_pod_name)",
                    "interval": "10s",
                    "intervalFactor": 1,
                    "legendFormat": "-> {{ io_kubernetes_pod_name }}",
                    "metric": "network",
                    "refId": "A",
                    "step": 10
                  },
                  {
                    "expr": "- sum (rate (container_network_transmit_bytes_total{image!=\"\",name=~\"^k8s_.*\",kubernetes_io_hostname=~\"^$Node$\"}[2m])) by (io_kubernetes_pod_name)",
                    "interval": "10s",
                    "intervalFactor": 1,
                    "legendFormat": "<- {{ io_kubernetes_pod_name }}",
                    "metric": "network",
                    "refId": "B",
                    "step": 10
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Pods network I/O",
                "tooltip": {
                  "msResolution": false,
                  "shared": true,
                  "sort": 2,
                  "value_type": "cumulative"
                },
                "type": "graph",
                "xaxis": {
                  "show": true
                },
                "yaxes": [
                  {
                    "format": "Bps",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": false
                  }
                ]
              }
            ],
            "title": "Pods network I/O"
          },
          {
            "collapse": true,
            "editable": true,
            "height": "250px",
            "panels": [
              {
                "aliasColors": {},
                "bars": false,
                "datasource": "${DS_PROMETHEUS}",
                "decimals": 2,
                "editable": true,
                "error": false,
                "fill": 1,
                "grid": {
                  "threshold1": null,
                  "threshold1Color": "rgba(216, 200, 27, 0.27)",
                  "threshold2": null,
                  "threshold2Color": "rgba(234, 112, 112, 0.22)"
                },
                "id": 30,
                "isNew": true,
                "legend": {
                  "alignAsTable": true,
                  "avg": true,
                  "current": true,
                  "max": false,
                  "min": false,
                  "rightSide": true,
                  "show": true,
                  "sideWidth": 200,
                  "sort": "current",
                  "sortDesc": true,
                  "total": false,
                  "values": true
                },
                "lines": true,
                "linewidth": 2,
                "links": [],
                "nullPointMode": "connected",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [],
                "span": 12,
                "stack": false,
                "steppedLine": false,
                "targets": [
                  {
                    "expr": "sum (rate (container_network_receive_bytes_total{image!=\"\",name=~\"^k8s_.*\",kubernetes_io_hostname=~\"^$Node$\"}[1m])) by (io_kubernetes_container_name, io_kubernetes_pod_name)",
                    "hide": false,
                    "interval": "10s",
                    "intervalFactor": 1,
                    "legendFormat": "-> pod: {{ io_kubernetes_pod_name }} | {{ io_kubernetes_container_name }}",
                    "metric": "network",
                    "refId": "B",
                    "step": 10
                  },
                  {
                    "expr": "- sum (rate (container_network_transmit_bytes_total{image!=\"\",name=~\"^k8s_.*\",kubernetes_io_hostname=~\"^$Node$\"}[1m])) by (io_kubernetes_container_name, io_kubernetes_pod_name)",
                    "hide": false,
                    "interval": "10s",
                    "intervalFactor": 1,
                    "legendFormat": "<- pod: {{ io_kubernetes_pod_name }} | {{ io_kubernetes_container_name }}",
                    "metric": "network",
                    "refId": "D",
                    "step": 10
                  },
                  {
                    "expr": "sum (rate (container_network_receive_bytes_total{image!=\"\",name!~\"^k8s_.*\",kubernetes_io_hostname=~\"^$Node$\"}[1m])) by (kubernetes_io_hostname, name, image)",
                    "hide": false,
                    "interval": "10s",
                    "intervalFactor": 1,
                    "legendFormat": "-> docker: {{ kubernetes_io_hostname }} | {{ image }} ({{ name }})",
                    "metric": "network",
                    "refId": "A",
                    "step": 10
                  },
                  {
                    "expr": "- sum (rate (container_network_transmit_bytes_total{image!=\"\",name!~\"^k8s_.*\",kubernetes_io_hostname=~\"^$Node$\"}[1m])) by (kubernetes_io_hostname, name, image)",
                    "hide": false,
                    "interval": "10s",
                    "intervalFactor": 1,
                    "legendFormat": "<- docker: {{ kubernetes_io_hostname }} | {{ image }} ({{ name }})",
                    "metric": "network",
                    "refId": "C",
                    "step": 10
                  },
                  {
                    "expr": "sum (rate (container_network_transmit_bytes_total{rkt_container_name!=\"\",kubernetes_io_hostname=~\"^$Node$\"}[1m])) by (kubernetes_io_hostname, rkt_container_name)",
                    "hide": false,
                    "interval": "10s",
                    "intervalFactor": 1,
                    "legendFormat": "-> rkt: {{ kubernetes_io_hostname }} | {{ rkt_container_name }}",
                    "metric": "network",
                    "refId": "E",
                    "step": 10
                  },
                  {
                    "expr": "- sum (rate (container_network_transmit_bytes_total{rkt_container_name!=\"\",kubernetes_io_hostname=~\"^$Node$\"}[1m])) by (kubernetes_io_hostname, rkt_container_name)",
                    "hide": false,
                    "interval": "10s",
                    "intervalFactor": 1,
                    "legendFormat": "<- rkt: {{ kubernetes_io_hostname }} | {{ rkt_container_name }}",
                    "metric": "network",
                    "refId": "F",
                    "step": 10
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Containers network I/O",
                "tooltip": {
                  "msResolution": false,
                  "shared": true,
                  "sort": 2,
                  "value_type": "cumulative"
                },
                "type": "graph",
                "xaxis": {
                  "show": true
                },
                "yaxes": [
                  {
                    "format": "Bps",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": false
                  }
                ]
              }
            ],
            "title": "Containers network I/O"
          },
          {
            "collapse": true,
            "editable": true,
            "height": "500px",
            "panels": [
              {
                "aliasColors": {},
                "bars": false,
                "datasource": "${DS_PROMETHEUS}",
                "decimals": 2,
                "editable": true,
                "error": false,
                "fill": 1,
                "grid": {
                  "threshold1": null,
                  "threshold1Color": "rgba(216, 200, 27, 0.27)",
                  "threshold2": null,
                  "threshold2Color": "rgba(234, 112, 112, 0.22)"
                },
                "id": 29,
                "isNew": true,
                "legend": {
                  "alignAsTable": true,
                  "avg": true,
                  "current": true,
                  "max": false,
                  "min": false,
                  "rightSide": false,
                  "show": true,
                  "sideWidth": 200,
                  "sort": "current",
                  "sortDesc": true,
                  "total": false,
                  "values": true
                },
                "lines": true,
                "linewidth": 2,
                "links": [],
                "nullPointMode": "connected",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [],
                "span": 12,
                "stack": false,
                "steppedLine": false,
                "targets": [
                  {
                    "expr": "sum (rate (container_network_receive_bytes_total{id!=\"/\",kubernetes_io_hostname=~\"^$Node$\"}[1m])) by (id)",
                    "interval": "10s",
                    "intervalFactor": 1,
                    "legendFormat": "-> {{ id }}",
                    "metric": "network",
                    "refId": "A",
                    "step": 10
                  },
                  {
                    "expr": "- sum (rate (container_network_transmit_bytes_total{id!=\"/\",kubernetes_io_hostname=~\"^$Node$\"}[1m])) by (id)",
                    "interval": "10s",
                    "intervalFactor": 1,
                    "legendFormat": "<- {{ id }}",
                    "metric": "network",
                    "refId": "B",
                    "step": 10
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "All processes network I/O",
                "tooltip": {
                  "msResolution": false,
                  "shared": true,
                  "sort": 2,
                  "value_type": "cumulative"
                },
                "type": "graph",
                "xaxis": {
                  "show": true
                },
                "yaxes": [
                  {
                    "format": "Bps",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": false
                  }
                ]
              }
            ],
            "title": "All processes network I/O"
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "timepicker": {
          "refresh_intervals": [
            "5s",
            "10s",
            "30s",
            "1m",
            "5m",
            "15m",
            "30m",
            "1h",
            "2h",
            "1d"
          ],
          "time_options": [
            "5m",
            "15m",
            "1h",
            "6h",
            "12h",
            "24h",
            "2d",
            "7d",
            "30d"
          ]
        },
        "templating": {
          "list": [
            {
              "allValue": ".*",
              "current": {},
              "datasource": "${DS_PROMETHEUS}",
              "hide": 0,
              "includeAll": true,
              "multi": false,
              "name": "Node",
              "options": [],
              "query": "label_values(kubernetes_io_hostname)",
              "refresh": 1,
              "type": "query"
            }
          ]
        },
        "annotations": {
          "list": []
        },
        "refresh": "1m",
        "schemaVersion": 12,
        "version": 21,
        "links": [],
        "gnetId": 315
      }
    prometheus-datasource.json: |
      {
        "name": "prometheus",
        "type": "prometheus",
        "url": "http://prometheus:9090",
        "access": "proxy",
        "basicAuth": false
      }
    prometheus-stats-dashboard.json: |
      {
        "__inputs": [
          {
            "name": "DS_PROMETHEUS",
            "label": "prometheus",
            "description": "",
            "type": "datasource",
            "pluginId": "prometheus",
            "pluginName": "Prometheus"
          }
        ],
        "__requires": [
          {
            "type": "panel",
            "id": "singlestat",
            "name": "Singlestat",
            "version": ""
          },
          {
            "type": "panel",
            "id": "text",
            "name": "Text",
            "version": ""
          },
          {
            "type": "panel",
            "id": "graph",
            "name": "Graph",
            "version": ""
          },
          {
            "type": "grafana",
            "id": "grafana",
            "name": "Grafana",
            "version": "3.1.1"
          },
          {
            "type": "datasource",
            "id": "prometheus",
            "name": "Prometheus",
            "version": "1.0.0"
          }
        ],
        "id": null,
        "title": "Prometheus Stats",
        "description": "The  official, pre-built Prometheus Stats Dashboard.",
        "tags": [],
        "style": "dark",
        "timezone": "browser",
        "editable": true,
        "hideControls": true,
        "sharedCrosshair": false,
        "rows": [
          {
            "collapse": false,
            "editable": true,
            "height": 178,
            "panels": [
              {
                "cacheTimeout": null,
                "colorBackground": false,
                "colorValue": false,
                "colors": [
                  "rgba(245, 54, 54, 0.9)",
                  "rgba(237, 129, 40, 0.89)",
                  "rgba(50, 172, 45, 0.97)"
                ],
                "datasource": "${DS_PROMETHEUS}",
                "decimals": 1,
                "editable": true,
                "error": false,
                "format": "s",
                "gauge": {
                  "maxValue": 100,
                  "minValue": 0,
                  "show": false,
                  "thresholdLabels": false,
                  "thresholdMarkers": true
                },
                "id": 5,
                "interval": null,
                "links": [],
                "mappingType": 1,
                "mappingTypes": [
                  {
                    "name": "value to text",
                    "value": 1
                  },
                  {
                    "name": "range to text",
                    "value": 2
                  }
                ],
                "maxDataPoints": 100,
                "nullPointMode": "connected",
                "nullText": null,
                "postfix": "",
                "postfixFontSize": "50%",
                "prefix": "",
                "prefixFontSize": "50%",
                "rangeMaps": [
                  {
                    "from": "null",
                    "text": "N/A",
                    "to": "null"
                  }
                ],
                "span": 3,
                "sparkline": {
                  "fillColor": "rgba(31, 118, 189, 0.18)",
                  "full": false,
                  "lineColor": "rgb(31, 120, 193)",
                  "show": false
                },
                "targets": [
                  {
                    "expr": "(time() - process_start_time_seconds{job=\"prometheus\"})",
                    "intervalFactor": 2,
                    "refId": "A",
                    "step": 4
                  }
                ],
                "thresholds": "",
                "title": "Uptime",
                "type": "singlestat",
                "valueFontSize": "80%",
                "valueMaps": [
                  {
                    "op": "=",
                    "text": "N/A",
                    "value": "null"
                  }
                ],
                "valueName": "current"
              },
              {
                "cacheTimeout": null,
                "colorBackground": false,
                "colorValue": false,
                "colors": [
                  "rgba(50, 172, 45, 0.97)",
                  "rgba(237, 129, 40, 0.89)",
                  "rgba(245, 54, 54, 0.9)"
                ],
                "datasource": "${DS_PROMETHEUS}",
                "editable": true,
                "error": false,
                "format": "none",
                "gauge": {
                  "maxValue": 100,
                  "minValue": 0,
                  "show": false,
                  "thresholdLabels": false,
                  "thresholdMarkers": true
                },
                "id": 6,
                "interval": null,
                "links": [],
                "mappingType": 1,
                "mappingTypes": [
                  {
                    "name": "value to text",
                    "value": 1
                  },
                  {
                    "name": "range to text",
                    "value": 2
                  }
                ],
                "maxDataPoints": 100,
                "nullPointMode": "connected",
                "nullText": null,
                "postfix": "",
                "postfixFontSize": "50%",
                "prefix": "",
                "prefixFontSize": "50%",
                "rangeMaps": [
                  {
                    "from": "null",
                    "text": "N/A",
                    "to": "null"
                  }
                ],
                "span": 3,
                "sparkline": {
                  "fillColor": "rgba(31, 118, 189, 0.18)",
                  "full": false,
                  "lineColor": "rgb(31, 120, 193)",
                  "show": true
                },
                "targets": [
                  {
                    "expr": "prometheus_local_storage_memory_series",
                    "intervalFactor": 2,
                    "refId": "A",
                    "step": 4
                  }
                ],
                "thresholds": "1,5",
                "title": "Local Storage Memory Series",
                "type": "singlestat",
                "valueFontSize": "70%",
                "valueMaps": [],
                "valueName": "current"
              },
              {
                "cacheTimeout": null,
                "colorBackground": false,
                "colorValue": true,
                "colors": [
                  "rgba(50, 172, 45, 0.97)",
                  "rgba(237, 129, 40, 0.89)",
                  "rgba(245, 54, 54, 0.9)"
                ],
                "datasource": "${DS_PROMETHEUS}",
                "editable": true,
                "error": false,
                "format": "none",
                "gauge": {
                  "maxValue": 100,
                  "minValue": 0,
                  "show": false,
                  "thresholdLabels": false,
                  "thresholdMarkers": true
                },
                "id": 7,
                "interval": null,
                "links": [],
                "mappingType": 1,
                "mappingTypes": [
                  {
                    "name": "value to text",
                    "value": 1
                  },
                  {
                    "name": "range to text",
                    "value": 2
                  }
                ],
                "maxDataPoints": 100,
                "nullPointMode": "connected",
                "nullText": null,
                "postfix": "",
                "postfixFontSize": "50%",
                "prefix": "",
                "prefixFontSize": "50%",
                "rangeMaps": [
                  {
                    "from": "null",
                    "text": "N/A",
                    "to": "null"
                  }
                ],
                "span": 3,
                "sparkline": {
                  "fillColor": "rgba(31, 118, 189, 0.18)",
                  "full": false,
                  "lineColor": "rgb(31, 120, 193)",
                  "show": true
                },
                "targets": [
                  {
                    "expr": "prometheus_local_storage_indexing_queue_length",
                    "intervalFactor": 2,
                    "refId": "A",
                    "step": 4
                  }
                ],
                "thresholds": "500,4000",
                "title": "Interal Storage Queue Length",
                "type": "singlestat",
                "valueFontSize": "70%",
                "valueMaps": [
                  {
                    "op": "=",
                    "text": "Empty",
                    "value": "0"
                  }
                ],
                "valueName": "current"
              },
              {
                "content": "<img src=\"http://prometheus.io/assets/prometheus_logo_grey.svg\" alt=\"Prometheus logo\" style=\"height: 40px;\">\n<span style=\"font-family: 'Open Sans', 'Helvetica Neue', Helvetica; font-size: 25px;vertical-align: text-top;color: #bbbfc2;margin-left: 10px;\">Prometheus</span>\n\n<p style=\"margin-top: 10px;\">You're using Prometheus, an open-source systems monitoring and alerting toolkit originally built at SoundCloud. For more information, check out the <a href=\"http://www.grafana.org/\">Grafana</a> and <a href=\"http://prometheus.io/\">Prometheus</a> projects.</p>",
                "editable": true,
                "error": false,
                "id": 9,
                "links": [],
                "mode": "html",
                "span": 3,
                "style": {},
                "title": "",
                "transparent": true,
                "type": "text"
              }
            ],
            "title": "New row"
          },
          {
            "collapse": false,
            "editable": true,
            "height": 227,
            "panels": [
              {
                "aliasColors": {
                  "prometheus": "#C15C17",
                  "{instance=\"localhost:9090\",job=\"prometheus\"}": "#C15C17"
                },
                "bars": false,
                "datasource": "${DS_PROMETHEUS}",
                "editable": true,
                "error": false,
                "fill": 1,
                "grid": {
                  "threshold1": null,
                  "threshold1Color": "rgba(216, 200, 27, 0.27)",
                  "threshold2": null,
                  "threshold2Color": "rgba(234, 112, 112, 0.22)"
                },
                "id": 3,
                "legend": {
                  "avg": false,
                  "current": false,
                  "max": false,
                  "min": false,
                  "show": true,
                  "total": false,
                  "values": false
                },
                "lines": true,
                "linewidth": 2,
                "links": [],
                "nullPointMode": "connected",
                "percentage": false,
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [],
                "span": 9,
                "stack": false,
                "steppedLine": false,
                "targets": [
                  {
                    "expr": "rate(prometheus_local_storage_ingested_samples_total[5m])",
                    "interval": "",
                    "intervalFactor": 2,
                    "legendFormat": "{{job}}",
                    "metric": "",
                    "refId": "A",
                    "step": 2
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Samples ingested (rate-5m)",
                "tooltip": {
                  "msResolution": false,
                  "ordering": "alphabetical",
                  "shared": true,
                  "value_type": "cumulative",
                  "sort": 0
                },
                "type": "graph",
                "xaxis": {
                  "show": true
                },
                "yaxes": [
                  {
                    "format": "short",
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "short",
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  }
                ]
              },
              {
                "content": "#### Samples Ingested\nThis graph displays the count of samples ingested by the Prometheus server, as measured over the last 5 minutes, per time series in the range vector. When troubleshooting an issue on IRC or Github, this is often the first stat requested by the Prometheus team. ",
                "editable": true,
                "error": false,
                "id": 8,
                "links": [],
                "mode": "markdown",
                "span": 2.995914043583536,
                "style": {},
                "title": "",
                "transparent": true,
                "type": "text"
              }
            ],
            "title": "New row"
          },
          {
            "collapse": false,
            "editable": true,
            "height": "250px",
            "panels": [
              {
                "aliasColors": {
                  "prometheus": "#F9BA8F",
                  "{instance=\"localhost:9090\",interval=\"5s\",job=\"prometheus\"}": "#F9BA8F"
                },
                "bars": false,
                "datasource": "${DS_PROMETHEUS}",
                "editable": true,
                "error": false,
                "fill": 1,
                "grid": {
                  "threshold1": null,
                  "threshold1Color": "rgba(216, 200, 27, 0.27)",
                  "threshold2": null,
                  "threshold2Color": "rgba(234, 112, 112, 0.22)"
                },
                "id": 2,
                "legend": {
                  "avg": false,
                  "current": false,
                  "max": false,
                  "min": false,
                  "show": true,
                  "total": false,
                  "values": false
                },
                "lines": true,
                "linewidth": 2,
                "links": [],
                "nullPointMode": "connected",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [],
                "span": 5,
                "stack": false,
                "steppedLine": false,
                "targets": [
                  {
                    "expr": "rate(prometheus_target_interval_length_seconds_count[5m])",
                    "intervalFactor": 2,
                    "legendFormat": "{{job}}",
                    "refId": "A",
                    "step": 2
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Target Scrapes (last 5m)",
                "tooltip": {
                  "msResolution": false,
                  "ordering": "alphabetical",
                  "shared": true,
                  "value_type": "cumulative",
                  "sort": 0
                },
                "type": "graph",
                "xaxis": {
                  "show": true
                },
                "yaxes": [
                  {
                    "format": "short",
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "short",
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  }
                ]
              },
              {
                "aliasColors": {},
                "bars": false,
                "datasource": "${DS_PROMETHEUS}",
                "editable": true,
                "error": false,
                "fill": 1,
                "grid": {
                  "threshold1": null,
                  "threshold1Color": "rgba(216, 200, 27, 0.27)",
                  "threshold2": null,
                  "threshold2Color": "rgba(234, 112, 112, 0.22)"
                },
                "id": 14,
                "legend": {
                  "avg": false,
                  "current": false,
                  "max": false,
                  "min": false,
                  "show": true,
                  "total": false,
                  "values": false
                },
                "lines": true,
                "linewidth": 2,
                "links": [],
                "nullPointMode": "connected",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [],
                "span": 4,
                "stack": false,
                "steppedLine": false,
                "targets": [
                  {
                    "expr": "prometheus_target_interval_length_seconds{quantile!=\"0.01\", quantile!=\"0.05\"}",
                    "interval": "",
                    "intervalFactor": 2,
                    "legendFormat": "{{quantile}} ({{interval}})",
                    "metric": "",
                    "refId": "A",
                    "step": 2
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Scrape Duration",
                "tooltip": {
                  "msResolution": false,
                  "ordering": "alphabetical",
                  "shared": true,
                  "value_type": "cumulative",
                  "sort": 0
                },
                "type": "graph",
                "xaxis": {
                  "show": true
                },
                "yaxes": [
                  {
                    "format": "short",
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "short",
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  }
                ]
              },
              {
                "content": "#### Scrapes\nPrometheus scrapes metrics from instrumented jobs, either directly or via an intermediary push gateway for short-lived jobs. Target scrapes will show how frequently targets are scraped, as measured over the last 5 minutes, per time series in the range vector. Scrape Duration will show how long the scrapes are taking, with percentiles available as series. ",
                "editable": true,
                "error": false,
                "id": 11,
                "links": [],
                "mode": "markdown",
                "span": 3,
                "style": {},
                "title": "",
                "transparent": true,
                "type": "text"
              }
            ],
            "title": "New row"
          },
          {
            "collapse": false,
            "editable": true,
            "height": "250px",
            "panels": [
              {
                "aliasColors": {},
                "bars": false,
                "datasource": "${DS_PROMETHEUS}",
                "decimals": null,
                "editable": true,
                "error": false,
                "fill": 1,
                "grid": {
                  "threshold1": null,
                  "threshold1Color": "rgba(216, 200, 27, 0.27)",
                  "threshold2": null,
                  "threshold2Color": "rgba(234, 112, 112, 0.22)"
                },
                "id": 12,
                "legend": {
                  "alignAsTable": false,
                  "avg": false,
                  "current": false,
                  "hideEmpty": true,
                  "max": false,
                  "min": false,
                  "show": true,
                  "total": false,
                  "values": false
                },
                "lines": true,
                "linewidth": 2,
                "links": [],
                "nullPointMode": "connected",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [],
                "span": 9,
                "stack": false,
                "steppedLine": false,
                "targets": [
                  {
                    "expr": "prometheus_evaluator_duration_milliseconds{quantile!=\"0.01\", quantile!=\"0.05\"}",
                    "interval": "",
                    "intervalFactor": 2,
                    "legendFormat": "{{quantile}}",
                    "refId": "A",
                    "step": 2
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Rule Eval Duration",
                "tooltip": {
                  "msResolution": false,
                  "ordering": "alphabetical",
                  "shared": true,
                  "value_type": "cumulative",
                  "sort": 0
                },
                "type": "graph",
                "xaxis": {
                  "show": true
                },
                "yaxes": [
                  {
                    "format": "percentunit",
                    "label": "",
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "short",
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  }
                ]
              },
              {
                "content": "#### Rule Evaluation Duration\nThis graph panel plots the duration for all evaluations to execute. The 50th percentile, 90th percentile and 99th percentile are shown as three separate series to help identify outliers that may be skewing the data.",
                "editable": true,
                "error": false,
                "id": 15,
                "links": [],
                "mode": "markdown",
                "span": 3,
                "style": {},
                "title": "",
                "transparent": true,
                "type": "text"
              }
            ],
            "title": "New row"
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "timepicker": {
          "now": true,
          "refresh_intervals": [
            "5s",
            "10s",
            "30s",
            "1m",
            "5m",
            "15m",
            "30m",
            "1h",
            "2h",
            "1d"
          ],
          "time_options": [
            "5m",
            "15m",
            "1h",
            "6h",
            "12h",
            "24h",
            "2d",
            "7d",
            "30d"
          ]
        },
        "templating": {
          "list": []
        },
        "annotations": {
          "list": []
        },
        "refresh": "1m",
        "schemaVersion": 12,
        "version": 0,
        "links": [
          {
            "icon": "info",
            "tags": [],
            "targetBlank": true,
            "title": "Grafana Docs",
            "tooltip": "",
            "type": "link",
            "url": "http://www.grafana.org/docs"
          },
          {
            "icon": "info",
            "tags": [],
            "targetBlank": true,
            "title": "Prometheus Docs",
            "type": "link",
            "url": "http://prometheus.io/docs/introduction/overview/"
          }
        ],
        "gnetId": 2
      }
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: grafana-import
- apiVersion: v1
  data:
    prometheus.yml: "global:\n  scrape_interval:     30s\n  evaluation_interval: 30s\n#
      A scrape configuration for running Prometheus on a Kubernetes cluster.\n# This
      uses separate scrape configs for cluster components (i.e. API server, node)\n#
      and services to allow each to use different authentication configs.\n#\n# Kubernetes
      labels will be added as Prometheus labels on metrics via the\n# `labelmap` relabeling
      action.\n\nrule_files:\n  - \"/etc/prometheus-rules/*.rules\"\n# A scrape configuration
      for running Prometheus on a Kubernetes cluster.\n# This uses separate scrape
      configs for cluster components (i.e. API server, node)\n# and services to allow
      each to use different authentication configs.\n#\n# Kubernetes labels will be
      added as Prometheus labels on metrics via the\n# `labelmap` relabeling action.\n\n#
      Scrape config for API servers.\n#\n# Kubernetes exposes API servers as endpoints
      to the default/kubernetes\n# service so this uses `endpoints` role and uses
      relabelling to only keep\n# the endpoints associated with the default/kubernetes
      service using the\n# default named port `https`. This works for single API server
      deployments as\n# well as HA API server deployments.\nscrape_configs:\n\n- job_name:
      'kubernetes-apiservers'\n\n  kubernetes_sd_configs:\n  - role: endpoints\n\n
      \ # Default to scraping over https. If required, just disable this or change
      to\n  # `http`.\n  scheme: https\n\n  # This TLS & bearer token file config
      is used to connect to the actual scrape\n  # endpoints for cluster components.
      This is separate to discovery auth\n  # configuration because discovery & scraping
      are two separate concerns in\n  # Prometheus. The discovery auth config is automatic
      if Prometheus runs inside\n  # the cluster. Otherwise, more config options have
      to be provided within the\n  # <kubernetes_sd_config>.\n  tls_config:\n    ca_file:
      /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n    # If your node certificates
      are self-signed or use a different CA to the\n    # master CA, then disable
      certificate verification below. Note that\n    # certificate verification is
      an integral part of a secure infrastructure\n    # so this should only be disabled
      in a controlled environment. You can\n    # disable certificate verification
      by uncommenting the line below.\n    #\n    insecure_skip_verify: true\n  bearer_token_file:
      /var/run/secrets/kubernetes.io/serviceaccount/token\n\n  # Keep only the default/kubernetes
      service endpoints for the https port. This\n  # will add targets for each API
      server which Kubernetes adds an endpoint to\n  # the default/kubernetes service.\n
      \ relabel_configs:\n  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name,
      __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex: default;kubernetes;https\n\n-
      job_name: 'kubernetes-nodes'\n\n  # Default to scraping over https. If required,
      just disable this or change to\n  # `http`.\n  scheme: https\n\n  # This TLS
      & bearer token file config is used to connect to the actual scrape\n  # endpoints
      for cluster components. This is separate to discovery auth\n  # configuration
      (`in_cluster` below) because discovery & scraping are two\n  # separate concerns
      in Prometheus.\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n
      \   # If your node certificates are self-signed or use a different CA to the\n
      \   # master CA, then disable certificate verification below. Note that\n    #
      certificate verification is an integral part of a secure infrastructure\n    #
      so this should only be disabled in a controlled environment. You can\n    #
      disable certificate verification by uncommenting the line below.\n    #\n    insecure_skip_verify:
      true\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n
      \ kubernetes_sd_configs:\n  - role: node\n\n  relabel_configs:\n  - action:
      labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n\n  # Backward compatibility
      for Kubernetes 1.3 dashboards                          \n  metric_relabel_configs:\n
      \ # - source_labels: [container_label_io_kubernetes_container_name,io_kubernetes_container_name,container_name]\n
      \ #   action: replace\n  #   regex: (.*);(.*)\n  #   replacement: '${1}${2}'\n
      \ #   target_label: io_kubernetes_container_name\n  # - source_labels: [container_label_io_kubernetes_pod_name,kubernetes_pod_name,pod_name]\n
      \ #   action: replace\n  #   regex: (.*);(.*)\n  #   replacement: '${1}${2}'\n
      \ #   target_label: kubernetes_pod_name\n  # - source_labels: [kubernetes_pod_name]\n
      \ #   action: replace\n  #   target_label: io_kubernetes_pod_name\n  - action:
      replace\n    source_labels: [id]\n    regex: '^/machine\\.slice/machine-rkt\\\\x2d([^\\\\]+)\\\\.+/([^/]+)\\.service$'\n
      \   target_label: rkt_container_name\n    replacement: '${2}-${1}'\n  - action:
      replace\n    source_labels: [id]\n    regex: '^/system\\.slice/(.+)\\.service$'\n
      \   target_label: systemd_service_name\n    replacement: '${1}'\n  # - action:
      keep\n  #   source_labels: [ __name__ ]\n  #   regex: '^(kubelet_running_(pod|container)_count|machine_(cpu_cores|memory_bytes)|container_(memory_(usage|working_set)_bytes|cpu_(system|usage|user)_seconds_total|start_time_seconds|fs_(usage|limit)_bytes|network_(receive|transmit)_bytes_total))$'\n\n#
      Scrape config for service endpoints.\n#\n# The relabeling allows the actual
      service scrape endpoint to be configured\n# via the following annotations:\n#\n#
      * `prometheus.io/scrape`: Only scrape services that have a value of `true`\n#
      * `prometheus.io/scheme`: If the metrics endpoint is secured then you will need\n#
      to set this to `https` & most likely set the `tls_config` of the scrape config.\n#
      * `prometheus.io/path`: If the metrics path is not `/metrics` override this.\n#
      * `prometheus.io/port`: If the metrics are exposed on a different port to the\n#
      service then set this appropriately.\n- job_name: 'kubernetes-service-endpoints'\n\n
      \ kubernetes_sd_configs:\n  - role: endpoints\n\n  relabel_configs:\n  - source_labels:
      [__meta_kubernetes_service_annotation_prometheus_io_scrape]\n    action: keep\n
      \   regex: true\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]\n
      \   action: replace\n    target_label: __scheme__\n    regex: (https?)\n  -
      source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]\n    action:
      replace\n    target_label: __metrics_path__\n    regex: (.+)\n  - source_labels:
      [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]\n    action:
      replace\n    target_label: __address__\n    regex: (.+)(?::\\d+);(\\d+)\n    replacement:
      $1:$2\n  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n
      \ - source_labels: [__meta_kubernetes_service_namespace]\n    action: replace\n
      \   target_label: kubernetes_namespace\n  - source_labels: [__meta_kubernetes_service_name]\n
      \   action: replace\n    target_label: kubernetes_name\n\n# Example scrape config
      for probing services via the Blackbox Exporter.\n#\n# The relabeling allows
      the actual service scrape endpoint to be configured\n# via the following annotations:\n#\n#
      * `prometheus.io/probe`: Only probe services that have a value of `true`\n-
      job_name: 'kubernetes-services'\n\n  metrics_path: /probe\n  params:\n    module:
      [http_2xx]\n\n  kubernetes_sd_configs:\n  - role: service\n\n  relabel_configs:\n
      \ - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]\n
      \   action: keep\n    regex: true\n  - source_labels: [__address__]\n    target_label:
      __param_target\n  - target_label: __address__\n    replacement: blackbox\n  -
      source_labels: [__param_target]\n    target_label: instance\n  - action: labelmap\n
      \   regex: __meta_kubernetes_service_label_(.+)\n  - source_labels: [__meta_kubernetes_service_namespace]\n
      \   target_label: kubernetes_namespace\n  - source_labels: [__meta_kubernetes_service_name]\n
      \   target_label: kubernetes_name\n\n# Example scrape config for pods\n#\n#
      The relabeling allows the actual pod scrape endpoint to be configured via the\n#
      following annotations:\n#\n# * `prometheus.io/scrape`: Only scrape pods that
      have a value of `true`\n# * `prometheus.io/path`: If the metrics path is not
      `/metrics` override this.\n# * `prometheus.io/port`: Scrape the pod on the indicated
      port instead of the default of `9102`.\n- job_name: 'kubernetes-pods'\n\n  kubernetes_sd_configs:\n
      \ - role: pod\n\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n
      \   action: keep\n    regex: true\n  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\n
      \   action: replace\n    target_label: __metrics_path__\n    regex: (.+)\n  -
      source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n
      \   action: replace\n    regex: (.+):(?:\\d+);(\\d+)\n    replacement: ${1}:${2}\n
      \   target_label: __address__\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_(.+)\n
      \ - source_labels: [__meta_kubernetes_pod_namespace]\n    action: replace\n
      \   target_label: kubernetes_namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n
      \   action: replace\n    target_label: kubernetes_pod_name"
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: prometheus-configmap
- apiVersion: v1
  data:
    storage-memory-chunks: "1048576"
    storage-retention: 720h
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: prometheus-env
- apiVersion: v1
  data:
    url: prometheus.paas.example.com
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: prometheus-external-url
- apiVersion: v1
  data:
    api-server.rules: |
      ALERT APIServerDown
      IF up{job="kubernetes-apiservers"} == 0
        FOR 60s
        LABELS {
          owner = "{{$labels.instance}}"
        }
        ANNOTATIONS {
          severity = "page",
          SUMMARY = "Kubernetes Master {{$labels.instance}} down",
          DESCRIPTION = "Kubernetes Master {{$labels.instance}} has been down for more than 60 seconds!"
        }
      ALERT ETCDInsufficientPeers
      IF count(up{job="kubernetes-apiservers"} == 0) > (count(up{job="kubernetes-apiservers"}) / 2 - 1)
        FOR 3m
        LABELS {
          owner = "{{$labels.instance}}"
        }
        ANNOTATIONS {
          severity = "critical",
          SUMMARY = "Etcd cluster small",
          DESCRIPTION = "If one more etcd peer goes down the cluster will loose quorum and will be unavailable",
        }
    application.rules: |
      ALERT AppBackendHttpResponsesCode5xx
        IF 100 * (sum(rate(haproxy_backend_http_responses_total{backend=~"be_.*", code="5xx"}[5m]))by(router, backend) / sum(rate(haproxy_backend_http_responses_total[5m])) by(router, backend)) > 20
        FOR 10m
        LABELS {
          owner = "{{$labels.backend}}"
        }
        ANNOTATIONS {
          severity = "page",
          SUMMARY = "{{$labels.router}}@{{$labels.instance}}: High ratio of Codes 5xx detected on backend {{$labels.backend}}",
          DESCRIPTION = "{{$labels.router}}@{{$labels.instance}}: High ratio of Codes 5xx for the last 10m on backend {{$labels.backend}} (current value is: {{ $value }})"
        }
    cpu-usage.rules: |
      ALERT NodeCPUUsage
        IF ((100 * sum(irate(container_cpu_usage_seconds_total{job="kubernetes-nodes", id="/"}[5m])) by (instance)) / (sum (machine_cpu_cores{job="kubernetes-nodes"}) by (instance))) > 75
        FOR 2m
        LABELS {
          owner = "{{$labels.instance}}"
        }
        ANNOTATIONS {
          severity = "page",
          SUMMARY = "{{$labels.instance}}: High CPU usage detected",
          DESCRIPTION = "{{$labels.instance}}: CPU usage is above 75% (current value is: {{ $value }})"
        }
    low-disk-space.rules: |
      node_filesystem_Used = sum(container_fs_usage_bytes{job="kubernetes-nodes", id="/"}) by (device, instance)
      node_filesystem_Limit= sum(container_fs_limit_bytes{job="kubernetes-nodes", id="/"}) by (device, instance)
      ALERT NodeLowDataDisk
        IF (node_filesystem_Used / node_filesystem_Limit * 100) > 75
        FOR 2m
        LABELS {
          owner = "{{$labels.instance}}:{{$labels.device}}"
        }
        ANNOTATIONS {
          severity = "page",
          SUMMARY = "{{$labels.instance}}: Low data disk space on {{$labels.device}}",
          DESCRIPTION = "{{$labels.instance}}: Data disk usage on {{$labels.device}} is above 75% (current value is: {{ $value }})"
        }
    mem-usage.rules: "node_memory_Cached = sum(container_memory_cache{id=\"/\", job=\"kubernetes-nodes\"})
      by (instance)\nnode_memory_MemTotal = sum(machine_memory_bytes{job=\"kubernetes-nodes\"})
      by (instance)\nnode_memory_MemFree = sum(machine_memory_bytes{job=\"kubernetes-nodes\"})
      by (instance) - sum(container_memory_usage_bytes{id=\"/\", job=\"kubernetes-nodes\"})
      by (instance)\nnode_memory_SwapTotal = sum(container_spec_memory_swap_limit_bytes{job=\"kubernetes-nodes\",
      id=\"/\"}) by (instance)\nnode_memory_SwapFree = sum(container_spec_memory_swap_limit_bytes{job=\"kubernetes-nodes\",
      id=\"/\"}) by (instance) - sum(container_memory_swap{job=\"kubernetes-nodes\"})
      by (instance)\nALERT NodeSwapUsage\n  IF (((node_memory_SwapTotal - node_memory_SwapFree)/
      node_memory_SwapTotal)*100) > 75 \n  FOR 2m\n  LABELS {\n    owner = \"{{$labels.instance}}\"\n
      \ }\n  ANNOTATIONS {\n    severity = \"page\",\n    SUMMARY = \"{{$labels.instance}}:
      Swap usage detected\",\n    DESCRIPTION = \"{{$labels.instance}}: Swap usage
      usage is above 75% (current value is: {{ $value }})\"\n  }\n\nALERT NodeMemoryUsage\n
      \ IF (((node_memory_MemTotal-node_memory_MemFree-node_memory_Cached)/(node_memory_MemTotal)*100))
      > 75\n  FOR 2m\n  LABELS {\n    owner = \"{{$labels.instance}}\"\n  }\n  ANNOTATIONS
      {\n    severity = \"page\",\n    SUMMARY = \"{{$labels.instance}}: High memory
      usage detected\",\n    DESCRIPTION = \"{{$labels.instance}}: Memory usage is
      above 75% (current value is: {{ $value }})\"\n  }\n"
    node.rules: |
      ALERT NodeDown
      IF up{job="kubernetes-nodes"} == 0
        FOR 60s
        LABELS {
          owner = "{{$labels.instance}}"
        }
        ANNOTATIONS {
          severity = "page",
          SUMMARY = "Kubernetes Node {{$labels.instance}} down",
          DESCRIPTION = "Kubernetes Node {{$labels.instance}} has been down for more than 60 seconds!"
        }
    pod.rules: |
      pod_memory_usage_bytes = sum(container_memory_usage_bytes{pod_name=~".+", job="kubernetes-nodes"}) by (pod_name, namespace)
      pod_network_receive_bytes_1m = sum(rate(container_network_receive_bytes_total{pod_name=~".+", job="kubernetes-nodes"}[1m])) by (pod_name, namespace)
      pod_network_transmit_bytes_1m = sum(rate(container_network_transmit_bytes_total{pod_name=~".+", job="kubernetes-nodes"}[1m])) by (pod_name, namespace)
      pod_cpu_usage_seconds_1m = sum(rate(container_cpu_usage_seconds_total{pod_name=~".+", job="kubernetes-nodes"}[1m])) by (pod_name, namespace)
      ALERT PodSwapDetection
        IF (sum(container_memory_swap{job="kubernetes-nodes", id!="/"}) BY (pod_name,instance)) > 0
        FOR 2m
        LABELS {
          owner = "{{$labels.pod_name}}"
        }
        ANNOTATIONS {
          severity = "page",
          SUMMARY = "{{$labels.pod_name}}: Swap usage detected",
          DESCRIPTION = "{{$labels.pod_name}}: Swap usage usage detected on node {{$labels.instance}} (current value is: {{ $value }})"
        }
    service-endpoints.rules: |
      ALERT RouterDown
      IF up{job="kubernetes-service-endpoints", router!=""} == 0
        FOR 60s
        LABELS {
          owner = "{{$labels.router}}@{{$labels.instance}}"
        }
        ANNOTATIONS {
          severity = "page",
          SUMMARY = "Kubernetes Router {{$labels.router}} at {{$labels.instance}} down",
          DESCRIPTION = "Kubernetes Router {{$labels.router}} on node {{$labels.instance}} has been down for more than 60 seconds!"
        }
    service.rules: |
      ALERT ServiceDown
      IF up{job="kubernetes-services"} == 0
        FOR 60s
        LABELS {
          owner = "{{$labels.kubernetes_namespace}}/{{$labels.kubernetes_name}}"
        }
        ANNOTATIONS {
          severity = "page",
          SUMMARY = "Kubernetes Service {{$labels.kubernetes_namespace}}/{{$labels.kubernetes_name}} down",
          DESCRIPTION = "Kubernetes Service {{$labels.kubernetes_namespace}}/{{$labels.kubernetes_name}} has been down for more than 60 seconds!"
        }
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: prometheus-rules
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      prometheus.io/path: /metrics
      prometheus.io/scrape: "true"
    creationTimestamp: null
    labels:
      app: alertmanager
      group: org.alertmanager
      name: alertmanager
    name: alertmanager
  spec:
    ports:
    - name: alertmanager
      port: 9093
      protocol: TCP
      targetPort: 9093
    selector:
      app: alertmanager
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      gluster.kubernetes.io/provisioned-for-pvc: alertmanager
    name: gluster-dynamic-alertmanager
  spec:
    ports:
    - port: 1
      protocol: TCP
      targetPort: 1
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      gluster.kubernetes.io/provisioned-for-pvc: mysql
    name: gluster-dynamic-mysql
  spec:
    ports:
    - port: 1
      protocol: TCP
      targetPort: 1
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      gluster.kubernetes.io/provisioned-for-pvc: prometheus-claim
    name: gluster-dynamic-prometheus-claim
  spec:
    ports:
    - port: 1
      protocol: TCP
      targetPort: 1
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      gluster.kubernetes.io/provisioned-for-pvc: pvc-oliv
    name: gluster-dynamic-pvc-oliv
  spec:
    ports:
    - port: 1
      protocol: TCP
      targetPort: 1
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: hawkular-grafana-persistent
      group: org.hawkular
    name: hawkular-grafana
  spec:
    ports:
    - name: 3000-tcp
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      app: hawkular-grafana-persistent
      deploymentconfig: hawkular-grafana
      group: org.hawkular
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      template: mysql-persistent-template
    name: mysql
  spec:
    ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: 3306
    selector:
      name: mysql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/scrape: "true"
    creationTimestamp: null
    labels:
      app: prometheus
      kubernetes.io/name: Prometheus
      name: prometheus
    name: prometheus
  spec:
    ports:
    - name: prometheus
      port: 9090
      protocol: TCP
      targetPort: 9090
    selector:
      app: prometheus
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: alertmanager
      apptype-infra: "true"
      group: org.alertmanager
      name: alertmanager
    name: alertmanager
  spec:
    host: alertmanager.paas.example.com
    port:
      targetPort: alertmanager
    tls:
      termination: edge
    to:
      kind: Service
      name: alertmanager
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2017-04-07T09:41:03Z
        status: "True"
        type: Admitted
      host: alertmanager.paas.example.com
      routerName: router-infra
      wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    labels:
      app: hawkular-grafana-persistent
      apptype-infra: "true"
      group: org.hawkular
    name: hawkular-grafana
  spec:
    host: metrics-grafana.paas.example.com
    port:
      targetPort: 3000-tcp
    tls:
      termination: edge
    to:
      kind: Service
      name: hawkular-grafana
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2017-04-07T07:30:00Z
        status: "True"
        type: Admitted
      host: metrics-grafana.paas.example.com
      routerName: router-infra
      wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    labels:
      app: prometheus
      apptype-infra: "true"
      kubernetes.io/name: Prometheus
      name: prometheus
    name: prometheus
  spec:
    host: prometheus.paas.example.com
    port:
      targetPort: prometheus
    tls:
      termination: edge
    to:
      kind: Service
      name: prometheus
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2017-04-07T07:21:58Z
        status: "True"
        type: Admitted
      host: prometheus.paas.example.com
      routerName: router-infra
      wildcardPolicy: None
